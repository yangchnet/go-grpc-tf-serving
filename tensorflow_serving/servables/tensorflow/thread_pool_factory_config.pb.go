// Copyright 2020 Google Inc. All Rights Reserved.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//==============================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tensorflow_serving/servables/tensorflow/thread_pool_factory_config.proto

package tensorflow

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configuration for a thread pool factory.
type ThreadPoolFactoryConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The config proto for a ThreadPoolFactory in the ThreadPoolFactory registry.
	ThreadPoolFactoryConfig *anypb.Any `protobuf:"bytes,1,opt,name=thread_pool_factory_config,json=threadPoolFactoryConfig,proto3" json:"thread_pool_factory_config,omitempty"`
}

func (x *ThreadPoolFactoryConfig) Reset() {
	*x = ThreadPoolFactoryConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadPoolFactoryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadPoolFactoryConfig) ProtoMessage() {}

func (x *ThreadPoolFactoryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadPoolFactoryConfig.ProtoReflect.Descriptor instead.
func (*ThreadPoolFactoryConfig) Descriptor() ([]byte, []int) {
	return file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_rawDescGZIP(), []int{0}
}

func (x *ThreadPoolFactoryConfig) GetThreadPoolFactoryConfig() *anypb.Any {
	if x != nil {
		return x.ThreadPoolFactoryConfig
	}
	return nil
}

var File_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto protoreflect.FileDescriptor

var file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_rawDesc = []byte{
	0x0a, 0x48, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2f, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a, 0x17, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x51, 0x0a, 0x1a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70,
	0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x17,
	0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0xec, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x6e, 0x67, 0x42, 0x1c, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x48, 0x02, 0x50, 0x01, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x71, 0x63, 0x69, 0x69, 0x70, 0x2d, 0x69, 0x63, 0x70, 0x2f, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0xf8, 0x01, 0x01, 0xa2,
	0x02, 0x03, 0x54, 0x53, 0x58, 0xaa, 0x02, 0x12, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0xca, 0x02, 0x12, 0x54, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0xe2,
	0x02, 0x1e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x13, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x3a, 0x3a, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_rawDescOnce sync.Once
	file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_rawDescData = file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_rawDesc
)

func file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_rawDescGZIP() []byte {
	file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_rawDescOnce.Do(func() {
		file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_rawDescData)
	})
	return file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_rawDescData
}

var file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_goTypes = []interface{}{
	(*ThreadPoolFactoryConfig)(nil), // 0: tensorflow.serving.ThreadPoolFactoryConfig
	(*anypb.Any)(nil),               // 1: google.protobuf.Any
}
var file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_depIdxs = []int32{
	1, // 0: tensorflow.serving.ThreadPoolFactoryConfig.thread_pool_factory_config:type_name -> google.protobuf.Any
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_init() }
func file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_init() {
	if File_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadPoolFactoryConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_goTypes,
		DependencyIndexes: file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_depIdxs,
		MessageInfos:      file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_msgTypes,
	}.Build()
	File_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto = out.File
	file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_rawDesc = nil
	file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_goTypes = nil
	file_tensorflow_serving_servables_tensorflow_thread_pool_factory_config_proto_depIdxs = nil
}
