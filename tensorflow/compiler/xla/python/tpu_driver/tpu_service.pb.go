// Copyright 2019 The TensorFlow Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ==============================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tensorflow/compiler/xla/python/tpu_driver/tpu_service.proto

package tpu_driver

import (
	xla "github.com/yangchnet/tf-serving/tensorflow/compiler/xla"
	service "github.com/yangchnet/tf-serving/tensorflow/compiler/xla/service"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    *int32  `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (x *StatusMessage) Reset() {
	*x = StatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusMessage) ProtoMessage() {}

func (x *StatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusMessage.ProtoReflect.Descriptor instead.
func (*StatusMessage) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{0}
}

func (x *StatusMessage) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *StatusMessage) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type AllocateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoreId *int32        `protobuf:"varint,1,req,name=core_id,json=coreId" json:"core_id,omitempty"`
	Region *MemoryRegion `protobuf:"varint,2,req,name=region,enum=tpu_driver.MemoryRegion" json:"region,omitempty"`
	// Types that are assignable to Size:
	//
	//	*AllocateRequest_NumBytes
	//	*AllocateRequest_Shape
	Size isAllocateRequest_Size `protobuf_oneof:"size"`
}

func (x *AllocateRequest) Reset() {
	*x = AllocateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateRequest) ProtoMessage() {}

func (x *AllocateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateRequest.ProtoReflect.Descriptor instead.
func (*AllocateRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{1}
}

func (x *AllocateRequest) GetCoreId() int32 {
	if x != nil && x.CoreId != nil {
		return *x.CoreId
	}
	return 0
}

func (x *AllocateRequest) GetRegion() MemoryRegion {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return MemoryRegion_HBM
}

func (m *AllocateRequest) GetSize() isAllocateRequest_Size {
	if m != nil {
		return m.Size
	}
	return nil
}

func (x *AllocateRequest) GetNumBytes() int64 {
	if x, ok := x.GetSize().(*AllocateRequest_NumBytes); ok {
		return x.NumBytes
	}
	return 0
}

func (x *AllocateRequest) GetShape() *xla.ShapeProto {
	if x, ok := x.GetSize().(*AllocateRequest_Shape); ok {
		return x.Shape
	}
	return nil
}

type isAllocateRequest_Size interface {
	isAllocateRequest_Size()
}

type AllocateRequest_NumBytes struct {
	NumBytes int64 `protobuf:"varint,3,opt,name=num_bytes,json=numBytes,oneof"`
}

type AllocateRequest_Shape struct {
	Shape *xla.ShapeProto `protobuf:"bytes,4,opt,name=shape,oneof"`
}

func (*AllocateRequest_NumBytes) isAllocateRequest_Size() {}

func (*AllocateRequest_Shape) isAllocateRequest_Size() {}

type AllocateTupleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoreId   *int32        `protobuf:"varint,1,req,name=core_id,json=coreId" json:"core_id,omitempty"`
	Region   *MemoryRegion `protobuf:"varint,2,req,name=region,enum=tpu_driver.MemoryRegion" json:"region,omitempty"`
	Children []int64       `protobuf:"varint,3,rep,name=children" json:"children,omitempty"`
}

func (x *AllocateTupleRequest) Reset() {
	*x = AllocateTupleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateTupleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateTupleRequest) ProtoMessage() {}

func (x *AllocateTupleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateTupleRequest.ProtoReflect.Descriptor instead.
func (*AllocateTupleRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{2}
}

func (x *AllocateTupleRequest) GetCoreId() int32 {
	if x != nil && x.CoreId != nil {
		return *x.CoreId
	}
	return 0
}

func (x *AllocateTupleRequest) GetRegion() MemoryRegion {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return MemoryRegion_HBM
}

func (x *AllocateTupleRequest) GetChildren() []int64 {
	if x != nil {
		return x.Children
	}
	return nil
}

type DeallocateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle *int64 `protobuf:"varint,1,req,name=handle" json:"handle,omitempty"`
}

func (x *DeallocateRequest) Reset() {
	*x = DeallocateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeallocateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeallocateRequest) ProtoMessage() {}

func (x *DeallocateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeallocateRequest.ProtoReflect.Descriptor instead.
func (*DeallocateRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeallocateRequest) GetHandle() int64 {
	if x != nil && x.Handle != nil {
		return *x.Handle
	}
	return 0
}

type TransferToDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetHandle *int64 `protobuf:"varint,1,req,name=target_handle,json=targetHandle" json:"target_handle,omitempty"`
	Data         []byte `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
}

func (x *TransferToDeviceRequest) Reset() {
	*x = TransferToDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferToDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferToDeviceRequest) ProtoMessage() {}

func (x *TransferToDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferToDeviceRequest.ProtoReflect.Descriptor instead.
func (*TransferToDeviceRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{4}
}

func (x *TransferToDeviceRequest) GetTargetHandle() int64 {
	if x != nil && x.TargetHandle != nil {
		return *x.TargetHandle
	}
	return 0
}

func (x *TransferToDeviceRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type TransferFromDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceHandle *int64 `protobuf:"varint,1,req,name=source_handle,json=sourceHandle" json:"source_handle,omitempty"`
}

func (x *TransferFromDeviceRequest) Reset() {
	*x = TransferFromDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferFromDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferFromDeviceRequest) ProtoMessage() {}

func (x *TransferFromDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferFromDeviceRequest.ProtoReflect.Descriptor instead.
func (*TransferFromDeviceRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{5}
}

func (x *TransferFromDeviceRequest) GetSourceHandle() int64 {
	if x != nil && x.SourceHandle != nil {
		return *x.SourceHandle
	}
	return 0
}

type TransferFromDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
}

func (x *TransferFromDeviceResponse) Reset() {
	*x = TransferFromDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferFromDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferFromDeviceResponse) ProtoMessage() {}

func (x *TransferFromDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferFromDeviceResponse.ProtoReflect.Descriptor instead.
func (*TransferFromDeviceResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{6}
}

func (x *TransferFromDeviceResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type TransferFromDeviceToDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceHandle *int64 `protobuf:"varint,1,req,name=source_handle,json=sourceHandle" json:"source_handle,omitempty"`
	TargetHandle *int64 `protobuf:"varint,2,req,name=target_handle,json=targetHandle" json:"target_handle,omitempty"`
}

func (x *TransferFromDeviceToDeviceRequest) Reset() {
	*x = TransferFromDeviceToDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferFromDeviceToDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferFromDeviceToDeviceRequest) ProtoMessage() {}

func (x *TransferFromDeviceToDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferFromDeviceToDeviceRequest.ProtoReflect.Descriptor instead.
func (*TransferFromDeviceToDeviceRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{7}
}

func (x *TransferFromDeviceToDeviceRequest) GetSourceHandle() int64 {
	if x != nil && x.SourceHandle != nil {
		return *x.SourceHandle
	}
	return 0
}

func (x *TransferFromDeviceToDeviceRequest) GetTargetHandle() int64 {
	if x != nil && x.TargetHandle != nil {
		return *x.TargetHandle
	}
	return 0
}

type CompileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HloProgram   *service.HloProto `protobuf:"bytes,1,req,name=hlo_program,json=hloProgram" json:"hlo_program,omitempty"`
	NumReplicas  *int64            `protobuf:"varint,2,opt,name=num_replicas,json=numReplicas" json:"num_replicas,omitempty"`
	DebugOptions *xla.DebugOptions `protobuf:"bytes,3,opt,name=debug_options,json=debugOptions" json:"debug_options,omitempty"`
}

func (x *CompileRequest) Reset() {
	*x = CompileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompileRequest) ProtoMessage() {}

func (x *CompileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompileRequest.ProtoReflect.Descriptor instead.
func (*CompileRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{8}
}

func (x *CompileRequest) GetHloProgram() *service.HloProto {
	if x != nil {
		return x.HloProgram
	}
	return nil
}

func (x *CompileRequest) GetNumReplicas() int64 {
	if x != nil && x.NumReplicas != nil {
		return *x.NumReplicas
	}
	return 0
}

func (x *CompileRequest) GetDebugOptions() *xla.DebugOptions {
	if x != nil {
		return x.DebugOptions
	}
	return nil
}

type CompiledProgramMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramShape *xla.ProgramShapeProto `protobuf:"bytes,1,req,name=program_shape,json=programShape" json:"program_shape,omitempty"`
}

func (x *CompiledProgramMetadata) Reset() {
	*x = CompiledProgramMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompiledProgramMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompiledProgramMetadata) ProtoMessage() {}

func (x *CompiledProgramMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompiledProgramMetadata.ProtoReflect.Descriptor instead.
func (*CompiledProgramMetadata) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{9}
}

func (x *CompiledProgramMetadata) GetProgramShape() *xla.ProgramShapeProto {
	if x != nil {
		return x.ProgramShape
	}
	return nil
}

type CompileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *CompiledProgramMetadata `protobuf:"bytes,1,req,name=metadata" json:"metadata,omitempty"`
}

func (x *CompileResponse) Reset() {
	*x = CompileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompileResponse) ProtoMessage() {}

func (x *CompileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompileResponse.ProtoReflect.Descriptor instead.
func (*CompileResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{10}
}

func (x *CompileResponse) GetMetadata() *CompiledProgramMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type LoadProgramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoreId                *int32 `protobuf:"varint,1,req,name=core_id,json=coreId" json:"core_id,omitempty"`
	CompiledProgramHandle *int64 `protobuf:"varint,2,req,name=compiled_program_handle,json=compiledProgramHandle" json:"compiled_program_handle,omitempty"`
}

func (x *LoadProgramRequest) Reset() {
	*x = LoadProgramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadProgramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadProgramRequest) ProtoMessage() {}

func (x *LoadProgramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadProgramRequest.ProtoReflect.Descriptor instead.
func (*LoadProgramRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{11}
}

func (x *LoadProgramRequest) GetCoreId() int32 {
	if x != nil && x.CoreId != nil {
		return *x.CoreId
	}
	return 0
}

func (x *LoadProgramRequest) GetCompiledProgramHandle() int64 {
	if x != nil && x.CompiledProgramHandle != nil {
		return *x.CompiledProgramHandle
	}
	return 0
}

type UnloadProgramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoadedProgramHandle *int64 `protobuf:"varint,1,req,name=loaded_program_handle,json=loadedProgramHandle" json:"loaded_program_handle,omitempty"`
}

func (x *UnloadProgramRequest) Reset() {
	*x = UnloadProgramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnloadProgramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadProgramRequest) ProtoMessage() {}

func (x *UnloadProgramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadProgramRequest.ProtoReflect.Descriptor instead.
func (*UnloadProgramRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{12}
}

func (x *UnloadProgramRequest) GetLoadedProgramHandle() int64 {
	if x != nil && x.LoadedProgramHandle != nil {
		return *x.LoadedProgramHandle
	}
	return 0
}

type ExecuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoadedProgramHandle *int64                     `protobuf:"varint,1,req,name=loaded_program_handle,json=loadedProgramHandle" json:"loaded_program_handle,omitempty"`
	InputHandle         []int64                    `protobuf:"varint,2,rep,name=input_handle,json=inputHandle" json:"input_handle,omitempty"`
	OutputHandle        []int64                    `protobuf:"varint,3,rep,name=output_handle,json=outputHandle" json:"output_handle,omitempty"`
	DeviceAssignment    *xla.DeviceAssignmentProto `protobuf:"bytes,4,opt,name=device_assignment,json=deviceAssignment" json:"device_assignment,omitempty"`
}

func (x *ExecuteRequest) Reset() {
	*x = ExecuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest) ProtoMessage() {}

func (x *ExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest.ProtoReflect.Descriptor instead.
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{13}
}

func (x *ExecuteRequest) GetLoadedProgramHandle() int64 {
	if x != nil && x.LoadedProgramHandle != nil {
		return *x.LoadedProgramHandle
	}
	return 0
}

func (x *ExecuteRequest) GetInputHandle() []int64 {
	if x != nil {
		return x.InputHandle
	}
	return nil
}

func (x *ExecuteRequest) GetOutputHandle() []int64 {
	if x != nil {
		return x.OutputHandle
	}
	return nil
}

func (x *ExecuteRequest) GetDeviceAssignment() *xla.DeviceAssignmentProto {
	if x != nil {
		return x.DeviceAssignment
	}
	return nil
}

type StreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry []*StreamRequest_Entry `protobuf:"bytes,30,rep,name=entry" json:"entry,omitempty"`
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{14}
}

func (x *StreamRequest) GetEntry() []*StreamRequest_Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type StreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry []*StreamResponse_Entry `protobuf:"bytes,20,rep,name=entry" json:"entry,omitempty"`
}

func (x *StreamResponse) Reset() {
	*x = StreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse) ProtoMessage() {}

func (x *StreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse.ProtoReflect.Descriptor instead.
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{15}
}

func (x *StreamResponse) GetEntry() []*StreamResponse_Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type OpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The version number for this client. Versions are bumped in case of
	// backwards incompatible client-server protocol changes. Servers will reject
	// clients with an unsupported version.
	ClientVersion *int32 `protobuf:"varint,1,opt,name=client_version,json=clientVersion,def=0" json:"client_version,omitempty"`
}

// Default values for OpenRequest fields.
const (
	Default_OpenRequest_ClientVersion = int32(0)
)

func (x *OpenRequest) Reset() {
	*x = OpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenRequest) ProtoMessage() {}

func (x *OpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenRequest.ProtoReflect.Descriptor instead.
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{16}
}

func (x *OpenRequest) GetClientVersion() int32 {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return Default_OpenRequest_ClientVersion
}

type OpenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId *uint32 `protobuf:"varint,1,req,name=client_id,json=clientId" json:"client_id,omitempty"`
	// Maximum time this client can be idle before it is GC'ed and all resources
	// released.
	MaxIdleTimeSeconds *int32 `protobuf:"varint,2,opt,name=max_idle_time_seconds,json=maxIdleTimeSeconds,def=3600" json:"max_idle_time_seconds,omitempty"`
}

// Default values for OpenResponse fields.
const (
	Default_OpenResponse_MaxIdleTimeSeconds = int32(3600)
)

func (x *OpenResponse) Reset() {
	*x = OpenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenResponse) ProtoMessage() {}

func (x *OpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenResponse.ProtoReflect.Descriptor instead.
func (*OpenResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{17}
}

func (x *OpenResponse) GetClientId() uint32 {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return 0
}

func (x *OpenResponse) GetMaxIdleTimeSeconds() int32 {
	if x != nil && x.MaxIdleTimeSeconds != nil {
		return *x.MaxIdleTimeSeconds
	}
	return Default_OpenResponse_MaxIdleTimeSeconds
}

type CloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId *uint32 `protobuf:"fixed32,1,req,name=client_id,json=clientId" json:"client_id,omitempty"`
}

func (x *CloseRequest) Reset() {
	*x = CloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest) ProtoMessage() {}

func (x *CloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest.ProtoReflect.Descriptor instead.
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{18}
}

func (x *CloseRequest) GetClientId() uint32 {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return 0
}

type CloseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseResponse) Reset() {
	*x = CloseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseResponse) ProtoMessage() {}

func (x *CloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseResponse.ProtoReflect.Descriptor instead.
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{19}
}

type ResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetRequest) Reset() {
	*x = ResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetRequest) ProtoMessage() {}

func (x *ResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetRequest.ProtoReflect.Descriptor instead.
func (*ResetRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{20}
}

type ResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetResponse) Reset() {
	*x = ResetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetResponse) ProtoMessage() {}

func (x *ResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetResponse.ProtoReflect.Descriptor instead.
func (*ResetResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{21}
}

type QuerySystemInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QuerySystemInfoRequest) Reset() {
	*x = QuerySystemInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySystemInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySystemInfoRequest) ProtoMessage() {}

func (x *QuerySystemInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySystemInfoRequest.ProtoReflect.Descriptor instead.
func (*QuerySystemInfoRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{22}
}

type QuerySystemInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemInfo *SystemInfo `protobuf:"bytes,1,req,name=system_info,json=systemInfo" json:"system_info,omitempty"`
}

func (x *QuerySystemInfoResponse) Reset() {
	*x = QuerySystemInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySystemInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySystemInfoResponse) ProtoMessage() {}

func (x *QuerySystemInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySystemInfoResponse.ProtoReflect.Descriptor instead.
func (*QuerySystemInfoResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{23}
}

func (x *QuerySystemInfoResponse) GetSystemInfo() *SystemInfo {
	if x != nil {
		return x.SystemInfo
	}
	return nil
}

type StreamRequest_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*StreamRequest_Entry_Alloc
	//	*StreamRequest_Entry_AllocTuple
	//	*StreamRequest_Entry_Dealloc
	//	*StreamRequest_Entry_TransferTo
	//	*StreamRequest_Entry_TransferFrom
	//	*StreamRequest_Entry_TransferFromTo
	//	*StreamRequest_Entry_Compile
	//	*StreamRequest_Entry_Load
	//	*StreamRequest_Entry_Unload
	//	*StreamRequest_Entry_Execute
	Request isStreamRequest_Entry_Request `protobuf_oneof:"request"`
	// If specified, a list of encoded EventId values.
	WaitForId []int64 `protobuf:"varint,20,rep,name=wait_for_id,json=waitForId" json:"wait_for_id,omitempty"`
	// A unique, encoded EventId value.
	// For Allocate, Compile, and Load, this also defines the result handle.
	OperationId *int64 `protobuf:"varint,21,req,name=operation_id,json=operationId" json:"operation_id,omitempty"`
	// A unique identifier for the thread that issued this request. Currently
	// for debugging purposes only.
	ThreadId *int64 `protobuf:"varint,22,opt,name=thread_id,json=threadId" json:"thread_id,omitempty"`
}

func (x *StreamRequest_Entry) Reset() {
	*x = StreamRequest_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRequest_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest_Entry) ProtoMessage() {}

func (x *StreamRequest_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest_Entry.ProtoReflect.Descriptor instead.
func (*StreamRequest_Entry) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{14, 0}
}

func (m *StreamRequest_Entry) GetRequest() isStreamRequest_Entry_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *StreamRequest_Entry) GetAlloc() *AllocateRequest {
	if x, ok := x.GetRequest().(*StreamRequest_Entry_Alloc); ok {
		return x.Alloc
	}
	return nil
}

func (x *StreamRequest_Entry) GetAllocTuple() *AllocateTupleRequest {
	if x, ok := x.GetRequest().(*StreamRequest_Entry_AllocTuple); ok {
		return x.AllocTuple
	}
	return nil
}

func (x *StreamRequest_Entry) GetDealloc() *DeallocateRequest {
	if x, ok := x.GetRequest().(*StreamRequest_Entry_Dealloc); ok {
		return x.Dealloc
	}
	return nil
}

func (x *StreamRequest_Entry) GetTransferTo() *TransferToDeviceRequest {
	if x, ok := x.GetRequest().(*StreamRequest_Entry_TransferTo); ok {
		return x.TransferTo
	}
	return nil
}

func (x *StreamRequest_Entry) GetTransferFrom() *TransferFromDeviceRequest {
	if x, ok := x.GetRequest().(*StreamRequest_Entry_TransferFrom); ok {
		return x.TransferFrom
	}
	return nil
}

func (x *StreamRequest_Entry) GetTransferFromTo() *TransferFromDeviceToDeviceRequest {
	if x, ok := x.GetRequest().(*StreamRequest_Entry_TransferFromTo); ok {
		return x.TransferFromTo
	}
	return nil
}

func (x *StreamRequest_Entry) GetCompile() *CompileRequest {
	if x, ok := x.GetRequest().(*StreamRequest_Entry_Compile); ok {
		return x.Compile
	}
	return nil
}

func (x *StreamRequest_Entry) GetLoad() *LoadProgramRequest {
	if x, ok := x.GetRequest().(*StreamRequest_Entry_Load); ok {
		return x.Load
	}
	return nil
}

func (x *StreamRequest_Entry) GetUnload() *UnloadProgramRequest {
	if x, ok := x.GetRequest().(*StreamRequest_Entry_Unload); ok {
		return x.Unload
	}
	return nil
}

func (x *StreamRequest_Entry) GetExecute() *ExecuteRequest {
	if x, ok := x.GetRequest().(*StreamRequest_Entry_Execute); ok {
		return x.Execute
	}
	return nil
}

func (x *StreamRequest_Entry) GetWaitForId() []int64 {
	if x != nil {
		return x.WaitForId
	}
	return nil
}

func (x *StreamRequest_Entry) GetOperationId() int64 {
	if x != nil && x.OperationId != nil {
		return *x.OperationId
	}
	return 0
}

func (x *StreamRequest_Entry) GetThreadId() int64 {
	if x != nil && x.ThreadId != nil {
		return *x.ThreadId
	}
	return 0
}

type isStreamRequest_Entry_Request interface {
	isStreamRequest_Entry_Request()
}

type StreamRequest_Entry_Alloc struct {
	Alloc *AllocateRequest `protobuf:"bytes,1,opt,name=alloc,oneof"`
}

type StreamRequest_Entry_AllocTuple struct {
	AllocTuple *AllocateTupleRequest `protobuf:"bytes,2,opt,name=alloc_tuple,json=allocTuple,oneof"`
}

type StreamRequest_Entry_Dealloc struct {
	Dealloc *DeallocateRequest `protobuf:"bytes,3,opt,name=dealloc,oneof"`
}

type StreamRequest_Entry_TransferTo struct {
	TransferTo *TransferToDeviceRequest `protobuf:"bytes,4,opt,name=transfer_to,json=transferTo,oneof"`
}

type StreamRequest_Entry_TransferFrom struct {
	TransferFrom *TransferFromDeviceRequest `protobuf:"bytes,5,opt,name=transfer_from,json=transferFrom,oneof"`
}

type StreamRequest_Entry_TransferFromTo struct {
	TransferFromTo *TransferFromDeviceToDeviceRequest `protobuf:"bytes,10,opt,name=transfer_from_to,json=transferFromTo,oneof"`
}

type StreamRequest_Entry_Compile struct {
	Compile *CompileRequest `protobuf:"bytes,6,opt,name=compile,oneof"`
}

type StreamRequest_Entry_Load struct {
	Load *LoadProgramRequest `protobuf:"bytes,7,opt,name=load,oneof"`
}

type StreamRequest_Entry_Unload struct {
	Unload *UnloadProgramRequest `protobuf:"bytes,8,opt,name=unload,oneof"`
}

type StreamRequest_Entry_Execute struct {
	Execute *ExecuteRequest `protobuf:"bytes,9,opt,name=execute,oneof"`
}

func (*StreamRequest_Entry_Alloc) isStreamRequest_Entry_Request() {}

func (*StreamRequest_Entry_AllocTuple) isStreamRequest_Entry_Request() {}

func (*StreamRequest_Entry_Dealloc) isStreamRequest_Entry_Request() {}

func (*StreamRequest_Entry_TransferTo) isStreamRequest_Entry_Request() {}

func (*StreamRequest_Entry_TransferFrom) isStreamRequest_Entry_Request() {}

func (*StreamRequest_Entry_TransferFromTo) isStreamRequest_Entry_Request() {}

func (*StreamRequest_Entry_Compile) isStreamRequest_Entry_Request() {}

func (*StreamRequest_Entry_Load) isStreamRequest_Entry_Request() {}

func (*StreamRequest_Entry_Unload) isStreamRequest_Entry_Request() {}

func (*StreamRequest_Entry_Execute) isStreamRequest_Entry_Request() {}

type StreamResponse_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*StreamResponse_Entry_TransferFrom
	//	*StreamResponse_Entry_Compile
	Response isStreamResponse_Entry_Response `protobuf_oneof:"response"`
	Status   *StatusMessage                  `protobuf:"bytes,10,req,name=status" json:"status,omitempty"`
	// Echos the given encoded EventId value.
	OperationId *int64 `protobuf:"varint,11,req,name=operation_id,json=operationId" json:"operation_id,omitempty"`
}

func (x *StreamResponse_Entry) Reset() {
	*x = StreamResponse_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamResponse_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse_Entry) ProtoMessage() {}

func (x *StreamResponse_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse_Entry.ProtoReflect.Descriptor instead.
func (*StreamResponse_Entry) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP(), []int{15, 0}
}

func (m *StreamResponse_Entry) GetResponse() isStreamResponse_Entry_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *StreamResponse_Entry) GetTransferFrom() *TransferFromDeviceResponse {
	if x, ok := x.GetResponse().(*StreamResponse_Entry_TransferFrom); ok {
		return x.TransferFrom
	}
	return nil
}

func (x *StreamResponse_Entry) GetCompile() *CompileResponse {
	if x, ok := x.GetResponse().(*StreamResponse_Entry_Compile); ok {
		return x.Compile
	}
	return nil
}

func (x *StreamResponse_Entry) GetStatus() *StatusMessage {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *StreamResponse_Entry) GetOperationId() int64 {
	if x != nil && x.OperationId != nil {
		return *x.OperationId
	}
	return 0
}

type isStreamResponse_Entry_Response interface {
	isStreamResponse_Entry_Response()
}

type StreamResponse_Entry_TransferFrom struct {
	TransferFrom *TransferFromDeviceResponse `protobuf:"bytes,3,opt,name=transfer_from,json=transferFrom,oneof"`
}

type StreamResponse_Entry_Compile struct {
	Compile *CompileResponse `protobuf:"bytes,4,opt,name=compile,oneof"`
}

func (*StreamResponse_Entry_TransferFrom) isStreamResponse_Entry_Response() {}

func (*StreamResponse_Entry_Compile) isStreamResponse_Entry_Response() {}

var File_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto protoreflect.FileDescriptor

var file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x78, 0x6c, 0x61, 0x2f, 0x70, 0x79, 0x74, 0x68, 0x6f, 0x6e,
	0x2f, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2f, 0x74, 0x70, 0x75, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74,
	0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x1a, 0x3a, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x78,
	0x6c, 0x61, 0x2f, 0x70, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x2f, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x2f, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x78, 0x6c, 0x61, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x68, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x21, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x78, 0x6c, 0x61, 0x2f, 0x78, 0x6c, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x78, 0x6c, 0x61, 0x2f, 0x78, 0x6c, 0x61,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x0d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x0f, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x09, 0x6e, 0x75, 0x6d,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08,
	0x6e, 0x75, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x78, 0x6c, 0x61, 0x2e, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70,
	0x65, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x7d, 0x0a, 0x14, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x70, 0x75,
	0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x2b, 0x0a, 0x11, 0x44, 0x65, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x52, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x54, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x40, 0x0a, 0x19, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x30, 0x0a, 0x1a, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6d, 0x0a,
	0x21, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x9b, 0x01, 0x0a,
	0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x0b, 0x68, 0x6c, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x78, 0x6c, 0x61, 0x2e, 0x48, 0x6c, 0x6f, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x68, 0x6c, 0x6f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12,
	0x21, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x12, 0x36, 0x0a, 0x0d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x78, 0x6c, 0x61, 0x2e,
	0x44, 0x65, 0x62, 0x75, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x56, 0x0a, 0x17, 0x43, 0x6f,
	0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x5f, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x78,
	0x6c, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x68, 0x61, 0x70, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x22, 0x52, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x12, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x63,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65,
	0x64, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x4a, 0x0a,
	0x14, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x0e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x78, 0x6c, 0x61, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0xc3, 0x06, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x1e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0xfa, 0x05, 0x0a, 0x05, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x05, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x12, 0x43, 0x0a, 0x0b, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x5f, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x39,
	0x0a, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x12, 0x46, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54,
	0x6f, 0x12, 0x4c, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72,
	0x6f, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x59, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x74, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x70, 0x75, 0x5f,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46,
	0x72, 0x6f, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x12, 0x36, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x70,
	0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x69,
	0x6c, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x6f,
	0x61, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x75, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x75, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0b,
	0x77, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xbc, 0x02, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x70, 0x75, 0x5f,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x1a, 0xf1, 0x01, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x4d, 0x0a, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x37, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74,
	0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30,
	0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x64, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x15,
	0x6d, 0x61, 0x78, 0x5f, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x04, 0x33, 0x36, 0x30,
	0x30, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2b, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x07, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x52,
	0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x32, 0xef, 0x02, 0x0a, 0x0e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x54, 0x70, 0x75, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x17, 0x2e,
	0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x18, 0x2e, 0x74, 0x70, 0x75, 0x5f,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x05, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0f,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x22, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x74, 0x70, 0x75, 0x5f,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x28, 0x01, 0x30, 0x01, 0x42, 0xb1, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x70, 0x75,
	0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x42, 0x0f, 0x54, 0x70, 0x75, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a, 0x48, 0x67, 0x69,
	0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x63, 0x69, 0x69, 0x70, 0x2d, 0x69, 0x63,
	0x70, 0x2f, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72,
	0x2f, 0x78, 0x6c, 0x61, 0x2f, 0x70, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x2f, 0x74, 0x70, 0x75, 0x5f,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x54,
	0x70, 0x75, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0xca, 0x02, 0x09, 0x54, 0x70, 0x75, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0xe2, 0x02, 0x15, 0x54, 0x70, 0x75, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09, 0x54,
	0x70, 0x75, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
}

var (
	file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescOnce sync.Once
	file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescData = file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDesc
)

func file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescGZIP() []byte {
	file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescOnce.Do(func() {
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescData)
	})
	return file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDescData
}

var file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_goTypes = []interface{}{
	(*StatusMessage)(nil),                     // 0: tpu_driver.StatusMessage
	(*AllocateRequest)(nil),                   // 1: tpu_driver.AllocateRequest
	(*AllocateTupleRequest)(nil),              // 2: tpu_driver.AllocateTupleRequest
	(*DeallocateRequest)(nil),                 // 3: tpu_driver.DeallocateRequest
	(*TransferToDeviceRequest)(nil),           // 4: tpu_driver.TransferToDeviceRequest
	(*TransferFromDeviceRequest)(nil),         // 5: tpu_driver.TransferFromDeviceRequest
	(*TransferFromDeviceResponse)(nil),        // 6: tpu_driver.TransferFromDeviceResponse
	(*TransferFromDeviceToDeviceRequest)(nil), // 7: tpu_driver.TransferFromDeviceToDeviceRequest
	(*CompileRequest)(nil),                    // 8: tpu_driver.CompileRequest
	(*CompiledProgramMetadata)(nil),           // 9: tpu_driver.CompiledProgramMetadata
	(*CompileResponse)(nil),                   // 10: tpu_driver.CompileResponse
	(*LoadProgramRequest)(nil),                // 11: tpu_driver.LoadProgramRequest
	(*UnloadProgramRequest)(nil),              // 12: tpu_driver.UnloadProgramRequest
	(*ExecuteRequest)(nil),                    // 13: tpu_driver.ExecuteRequest
	(*StreamRequest)(nil),                     // 14: tpu_driver.StreamRequest
	(*StreamResponse)(nil),                    // 15: tpu_driver.StreamResponse
	(*OpenRequest)(nil),                       // 16: tpu_driver.OpenRequest
	(*OpenResponse)(nil),                      // 17: tpu_driver.OpenResponse
	(*CloseRequest)(nil),                      // 18: tpu_driver.CloseRequest
	(*CloseResponse)(nil),                     // 19: tpu_driver.CloseResponse
	(*ResetRequest)(nil),                      // 20: tpu_driver.ResetRequest
	(*ResetResponse)(nil),                     // 21: tpu_driver.ResetResponse
	(*QuerySystemInfoRequest)(nil),            // 22: tpu_driver.QuerySystemInfoRequest
	(*QuerySystemInfoResponse)(nil),           // 23: tpu_driver.QuerySystemInfoResponse
	(*StreamRequest_Entry)(nil),               // 24: tpu_driver.StreamRequest.Entry
	(*StreamResponse_Entry)(nil),              // 25: tpu_driver.StreamResponse.Entry
	(MemoryRegion)(0),                         // 26: tpu_driver.MemoryRegion
	(*xla.ShapeProto)(nil),                    // 27: xla.ShapeProto
	(*service.HloProto)(nil),                  // 28: xla.HloProto
	(*xla.DebugOptions)(nil),                  // 29: xla.DebugOptions
	(*xla.ProgramShapeProto)(nil),             // 30: xla.ProgramShapeProto
	(*xla.DeviceAssignmentProto)(nil),         // 31: xla.DeviceAssignmentProto
	(*SystemInfo)(nil),                        // 32: tpu_driver.SystemInfo
}
var file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_depIdxs = []int32{
	26, // 0: tpu_driver.AllocateRequest.region:type_name -> tpu_driver.MemoryRegion
	27, // 1: tpu_driver.AllocateRequest.shape:type_name -> xla.ShapeProto
	26, // 2: tpu_driver.AllocateTupleRequest.region:type_name -> tpu_driver.MemoryRegion
	28, // 3: tpu_driver.CompileRequest.hlo_program:type_name -> xla.HloProto
	29, // 4: tpu_driver.CompileRequest.debug_options:type_name -> xla.DebugOptions
	30, // 5: tpu_driver.CompiledProgramMetadata.program_shape:type_name -> xla.ProgramShapeProto
	9,  // 6: tpu_driver.CompileResponse.metadata:type_name -> tpu_driver.CompiledProgramMetadata
	31, // 7: tpu_driver.ExecuteRequest.device_assignment:type_name -> xla.DeviceAssignmentProto
	24, // 8: tpu_driver.StreamRequest.entry:type_name -> tpu_driver.StreamRequest.Entry
	25, // 9: tpu_driver.StreamResponse.entry:type_name -> tpu_driver.StreamResponse.Entry
	32, // 10: tpu_driver.QuerySystemInfoResponse.system_info:type_name -> tpu_driver.SystemInfo
	1,  // 11: tpu_driver.StreamRequest.Entry.alloc:type_name -> tpu_driver.AllocateRequest
	2,  // 12: tpu_driver.StreamRequest.Entry.alloc_tuple:type_name -> tpu_driver.AllocateTupleRequest
	3,  // 13: tpu_driver.StreamRequest.Entry.dealloc:type_name -> tpu_driver.DeallocateRequest
	4,  // 14: tpu_driver.StreamRequest.Entry.transfer_to:type_name -> tpu_driver.TransferToDeviceRequest
	5,  // 15: tpu_driver.StreamRequest.Entry.transfer_from:type_name -> tpu_driver.TransferFromDeviceRequest
	7,  // 16: tpu_driver.StreamRequest.Entry.transfer_from_to:type_name -> tpu_driver.TransferFromDeviceToDeviceRequest
	8,  // 17: tpu_driver.StreamRequest.Entry.compile:type_name -> tpu_driver.CompileRequest
	11, // 18: tpu_driver.StreamRequest.Entry.load:type_name -> tpu_driver.LoadProgramRequest
	12, // 19: tpu_driver.StreamRequest.Entry.unload:type_name -> tpu_driver.UnloadProgramRequest
	13, // 20: tpu_driver.StreamRequest.Entry.execute:type_name -> tpu_driver.ExecuteRequest
	6,  // 21: tpu_driver.StreamResponse.Entry.transfer_from:type_name -> tpu_driver.TransferFromDeviceResponse
	10, // 22: tpu_driver.StreamResponse.Entry.compile:type_name -> tpu_driver.CompileResponse
	0,  // 23: tpu_driver.StreamResponse.Entry.status:type_name -> tpu_driver.StatusMessage
	16, // 24: tpu_driver.CloudTpuDriver.Open:input_type -> tpu_driver.OpenRequest
	18, // 25: tpu_driver.CloudTpuDriver.Close:input_type -> tpu_driver.CloseRequest
	20, // 26: tpu_driver.CloudTpuDriver.Reset:input_type -> tpu_driver.ResetRequest
	22, // 27: tpu_driver.CloudTpuDriver.QuerySystemInfo:input_type -> tpu_driver.QuerySystemInfoRequest
	14, // 28: tpu_driver.CloudTpuDriver.StreamExecute:input_type -> tpu_driver.StreamRequest
	17, // 29: tpu_driver.CloudTpuDriver.Open:output_type -> tpu_driver.OpenResponse
	19, // 30: tpu_driver.CloudTpuDriver.Close:output_type -> tpu_driver.CloseResponse
	21, // 31: tpu_driver.CloudTpuDriver.Reset:output_type -> tpu_driver.ResetResponse
	23, // 32: tpu_driver.CloudTpuDriver.QuerySystemInfo:output_type -> tpu_driver.QuerySystemInfoResponse
	15, // 33: tpu_driver.CloudTpuDriver.StreamExecute:output_type -> tpu_driver.StreamResponse
	29, // [29:34] is the sub-list for method output_type
	24, // [24:29] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_init() }
func file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_init() {
	if File_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto != nil {
		return
	}
	file_tensorflow_compiler_xla_python_tpu_driver_tpu_driver_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateTupleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeallocateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferToDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferFromDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferFromDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferFromDeviceToDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompiledProgramMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadProgramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnloadProgramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySystemInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySystemInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRequest_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamResponse_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AllocateRequest_NumBytes)(nil),
		(*AllocateRequest_Shape)(nil),
	}
	file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*StreamRequest_Entry_Alloc)(nil),
		(*StreamRequest_Entry_AllocTuple)(nil),
		(*StreamRequest_Entry_Dealloc)(nil),
		(*StreamRequest_Entry_TransferTo)(nil),
		(*StreamRequest_Entry_TransferFrom)(nil),
		(*StreamRequest_Entry_TransferFromTo)(nil),
		(*StreamRequest_Entry_Compile)(nil),
		(*StreamRequest_Entry_Load)(nil),
		(*StreamRequest_Entry_Unload)(nil),
		(*StreamRequest_Entry_Execute)(nil),
	}
	file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*StreamResponse_Entry_TransferFrom)(nil),
		(*StreamResponse_Entry_Compile)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_goTypes,
		DependencyIndexes: file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_depIdxs,
		MessageInfos:      file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_msgTypes,
	}.Build()
	File_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto = out.File
	file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_rawDesc = nil
	file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_goTypes = nil
	file_tensorflow_compiler_xla_python_tpu_driver_tpu_service_proto_depIdxs = nil
}
