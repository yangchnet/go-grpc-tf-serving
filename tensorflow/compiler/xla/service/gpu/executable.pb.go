// Copyright 2022 The TensorFlow Authors. All Rights Reserved.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//==============================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tensorflow/compiler/xla/service/gpu/executable.proto

package gpu

import (
	service "gitee.com/qciip-icp/tf-serving/tensorflow/compiler/xla/service"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type XlaRuntimeGpuExecutableProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XlaRuntimeExecutable *service.XlaRuntimeExecutableProto `protobuf:"bytes,1,opt,name=xla_runtime_executable,json=xlaRuntimeExecutable,proto3" json:"xla_runtime_executable,omitempty"`
	// XLA-specific attributes of the executable's entry function.
	EntryFuncAttrs *service.EntryFunctionAttributes `protobuf:"bytes,2,opt,name=entry_func_attrs,json=entryFuncAttrs,proto3" json:"entry_func_attrs,omitempty"`
	// PTX for the compiled GPU kernels.
	GpuAsmText string `protobuf:"bytes,3,opt,name=gpu_asm_text,json=gpuAsmText,proto3" json:"gpu_asm_text,omitempty"`
	// Corresponding CUBIN for the above PTX.
	GpuBinary []byte `protobuf:"bytes,4,opt,name=gpu_binary,json=gpuBinary,proto3" json:"gpu_binary,omitempty"`
	// Constants required by the serialized executable.
	Constants []*XlaRuntimeGpuExecutableProto_ConstantInfoProto `protobuf:"bytes,5,rep,name=constants,proto3" json:"constants,omitempty"`
}

func (x *XlaRuntimeGpuExecutableProto) Reset() {
	*x = XlaRuntimeGpuExecutableProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_service_gpu_executable_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XlaRuntimeGpuExecutableProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XlaRuntimeGpuExecutableProto) ProtoMessage() {}

func (x *XlaRuntimeGpuExecutableProto) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_service_gpu_executable_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XlaRuntimeGpuExecutableProto.ProtoReflect.Descriptor instead.
func (*XlaRuntimeGpuExecutableProto) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_service_gpu_executable_proto_rawDescGZIP(), []int{0}
}

func (x *XlaRuntimeGpuExecutableProto) GetXlaRuntimeExecutable() *service.XlaRuntimeExecutableProto {
	if x != nil {
		return x.XlaRuntimeExecutable
	}
	return nil
}

func (x *XlaRuntimeGpuExecutableProto) GetEntryFuncAttrs() *service.EntryFunctionAttributes {
	if x != nil {
		return x.EntryFuncAttrs
	}
	return nil
}

func (x *XlaRuntimeGpuExecutableProto) GetGpuAsmText() string {
	if x != nil {
		return x.GpuAsmText
	}
	return ""
}

func (x *XlaRuntimeGpuExecutableProto) GetGpuBinary() []byte {
	if x != nil {
		return x.GpuBinary
	}
	return nil
}

func (x *XlaRuntimeGpuExecutableProto) GetConstants() []*XlaRuntimeGpuExecutableProto_ConstantInfoProto {
	if x != nil {
		return x.Constants
	}
	return nil
}

type XlaRuntimeGpuExecutableProto_ConstantInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolName      string `protobuf:"bytes,1,opt,name=symbol_name,json=symbolName,proto3" json:"symbol_name,omitempty"`
	Content         []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	AllocationIndex int32  `protobuf:"varint,3,opt,name=allocation_index,json=allocationIndex,proto3" json:"allocation_index,omitempty"`
}

func (x *XlaRuntimeGpuExecutableProto_ConstantInfoProto) Reset() {
	*x = XlaRuntimeGpuExecutableProto_ConstantInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_service_gpu_executable_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XlaRuntimeGpuExecutableProto_ConstantInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XlaRuntimeGpuExecutableProto_ConstantInfoProto) ProtoMessage() {}

func (x *XlaRuntimeGpuExecutableProto_ConstantInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_service_gpu_executable_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XlaRuntimeGpuExecutableProto_ConstantInfoProto.ProtoReflect.Descriptor instead.
func (*XlaRuntimeGpuExecutableProto_ConstantInfoProto) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_service_gpu_executable_proto_rawDescGZIP(), []int{0, 0}
}

func (x *XlaRuntimeGpuExecutableProto_ConstantInfoProto) GetSymbolName() string {
	if x != nil {
		return x.SymbolName
	}
	return ""
}

func (x *XlaRuntimeGpuExecutableProto_ConstantInfoProto) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *XlaRuntimeGpuExecutableProto_ConstantInfoProto) GetAllocationIndex() int32 {
	if x != nil {
		return x.AllocationIndex
	}
	return 0
}

var File_tensorflow_compiler_xla_service_gpu_executable_proto protoreflect.FileDescriptor

var file_tensorflow_compiler_xla_service_gpu_executable_proto_rawDesc = []byte{
	0x0a, 0x34, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x78, 0x6c, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x67, 0x70, 0x75, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x78, 0x6c, 0x61, 0x2e, 0x67, 0x70, 0x75, 0x1a,
	0x29, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d, 0x70,
	0x69, 0x6c, 0x65, 0x72, 0x2f, 0x78, 0x6c, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x68, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcf, 0x03, 0x0a, 0x1c, 0x58,
	0x6c, 0x61, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x47, 0x70, 0x75, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x54, 0x0a, 0x16, 0x78,
	0x6c, 0x61, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x78, 0x6c,
	0x61, 0x2e, 0x58, 0x6c, 0x61, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x78, 0x6c, 0x61,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x46, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x78, 0x6c,
	0x61, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x46, 0x75, 0x6e, 0x63, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x70, 0x75,
	0x5f, 0x61, 0x73, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x67, 0x70, 0x75, 0x41, 0x73, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67,
	0x70, 0x75, 0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x67, 0x70, 0x75, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x55, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x78, 0x6c, 0x61, 0x2e, 0x67, 0x70, 0x75, 0x2e, 0x58, 0x6c, 0x61, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x47, 0x70, 0x75, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x73, 0x1a, 0x79, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0xa1, 0x01, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x78, 0x6c, 0x61, 0x2e, 0x67, 0x70, 0x75, 0x42, 0x0f, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50,
	0x01, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x63, 0x69,
	0x69, 0x70, 0x2d, 0x69, 0x63, 0x70, 0x2f, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e,
	0x67, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x78, 0x6c, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x67, 0x70, 0x75, 0xa2, 0x02, 0x03, 0x58, 0x47, 0x58, 0xaa, 0x02, 0x07, 0x58, 0x6c,
	0x61, 0x2e, 0x47, 0x70, 0x75, 0xca, 0x02, 0x07, 0x58, 0x6c, 0x61, 0x5c, 0x47, 0x70, 0x75, 0xe2,
	0x02, 0x13, 0x58, 0x6c, 0x61, 0x5c, 0x47, 0x70, 0x75, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08, 0x58, 0x6c, 0x61, 0x3a, 0x3a, 0x47, 0x70, 0x75,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_compiler_xla_service_gpu_executable_proto_rawDescOnce sync.Once
	file_tensorflow_compiler_xla_service_gpu_executable_proto_rawDescData = file_tensorflow_compiler_xla_service_gpu_executable_proto_rawDesc
)

func file_tensorflow_compiler_xla_service_gpu_executable_proto_rawDescGZIP() []byte {
	file_tensorflow_compiler_xla_service_gpu_executable_proto_rawDescOnce.Do(func() {
		file_tensorflow_compiler_xla_service_gpu_executable_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_compiler_xla_service_gpu_executable_proto_rawDescData)
	})
	return file_tensorflow_compiler_xla_service_gpu_executable_proto_rawDescData
}

var file_tensorflow_compiler_xla_service_gpu_executable_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tensorflow_compiler_xla_service_gpu_executable_proto_goTypes = []interface{}{
	(*XlaRuntimeGpuExecutableProto)(nil),                   // 0: xla.gpu.XlaRuntimeGpuExecutableProto
	(*XlaRuntimeGpuExecutableProto_ConstantInfoProto)(nil), // 1: xla.gpu.XlaRuntimeGpuExecutableProto.ConstantInfoProto
	(*service.XlaRuntimeExecutableProto)(nil),              // 2: xla.XlaRuntimeExecutableProto
	(*service.EntryFunctionAttributes)(nil),                // 3: xla.EntryFunctionAttributes
}
var file_tensorflow_compiler_xla_service_gpu_executable_proto_depIdxs = []int32{
	2, // 0: xla.gpu.XlaRuntimeGpuExecutableProto.xla_runtime_executable:type_name -> xla.XlaRuntimeExecutableProto
	3, // 1: xla.gpu.XlaRuntimeGpuExecutableProto.entry_func_attrs:type_name -> xla.EntryFunctionAttributes
	1, // 2: xla.gpu.XlaRuntimeGpuExecutableProto.constants:type_name -> xla.gpu.XlaRuntimeGpuExecutableProto.ConstantInfoProto
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_tensorflow_compiler_xla_service_gpu_executable_proto_init() }
func file_tensorflow_compiler_xla_service_gpu_executable_proto_init() {
	if File_tensorflow_compiler_xla_service_gpu_executable_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_compiler_xla_service_gpu_executable_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XlaRuntimeGpuExecutableProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_service_gpu_executable_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XlaRuntimeGpuExecutableProto_ConstantInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_compiler_xla_service_gpu_executable_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_compiler_xla_service_gpu_executable_proto_goTypes,
		DependencyIndexes: file_tensorflow_compiler_xla_service_gpu_executable_proto_depIdxs,
		MessageInfos:      file_tensorflow_compiler_xla_service_gpu_executable_proto_msgTypes,
	}.Build()
	File_tensorflow_compiler_xla_service_gpu_executable_proto = out.File
	file_tensorflow_compiler_xla_service_gpu_executable_proto_rawDesc = nil
	file_tensorflow_compiler_xla_service_gpu_executable_proto_goTypes = nil
	file_tensorflow_compiler_xla_service_gpu_executable_proto_depIdxs = nil
}
