// Copyright 2022 The TensorFlow Authors. All Rights Reserved.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//==============================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tensorflow/compiler/jit/xla_compilation_cache.proto

package jit

import (
	service "github.com/yangchnet/tf-serving/tensorflow/compiler/xla/service"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the cache key used for persistence.
type XlaSerializedCacheKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignatureFingerprint uint64 `protobuf:"varint,1,opt,name=signature_fingerprint,json=signatureFingerprint,proto3" json:"signature_fingerprint,omitempty"`
	ClusterFingerprint   uint64 `protobuf:"varint,2,opt,name=cluster_fingerprint,json=clusterFingerprint,proto3" json:"cluster_fingerprint,omitempty"`
	DeviceType           string `protobuf:"bytes,3,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	Prefix               string `protobuf:"bytes,4,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *XlaSerializedCacheKey) Reset() {
	*x = XlaSerializedCacheKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_jit_xla_compilation_cache_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XlaSerializedCacheKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XlaSerializedCacheKey) ProtoMessage() {}

func (x *XlaSerializedCacheKey) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_jit_xla_compilation_cache_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XlaSerializedCacheKey.ProtoReflect.Descriptor instead.
func (*XlaSerializedCacheKey) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_jit_xla_compilation_cache_proto_rawDescGZIP(), []int{0}
}

func (x *XlaSerializedCacheKey) GetSignatureFingerprint() uint64 {
	if x != nil {
		return x.SignatureFingerprint
	}
	return 0
}

func (x *XlaSerializedCacheKey) GetClusterFingerprint() uint64 {
	if x != nil {
		return x.ClusterFingerprint
	}
	return 0
}

func (x *XlaSerializedCacheKey) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *XlaSerializedCacheKey) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

// Represents an entry in the XLA compile cache.
type XlaSerializedCacheEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Used to uniqely identify this entry in its persisted representation.
	Key *XlaSerializedCacheKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The computation (HLO) that compilation was done for. It is correlated to
	// the input TF graph so we can use it to fingerprint the compiled binary. We
	// serialize this rather than the input graphdef because it provides a
	// stronger guarantee over what bindings are needed between the HLO and
	// calling TF graph.
	HloModule *service.HloModuleProto `protobuf:"bytes,2,opt,name=hlo_module,json=hloModule,proto3" json:"hlo_module,omitempty"`
	// The raw bytes of the executable.
	Executable []byte `protobuf:"bytes,3,opt,name=executable,proto3" json:"executable,omitempty"`
}

func (x *XlaSerializedCacheEntry) Reset() {
	*x = XlaSerializedCacheEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_jit_xla_compilation_cache_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XlaSerializedCacheEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XlaSerializedCacheEntry) ProtoMessage() {}

func (x *XlaSerializedCacheEntry) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_jit_xla_compilation_cache_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XlaSerializedCacheEntry.ProtoReflect.Descriptor instead.
func (*XlaSerializedCacheEntry) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_jit_xla_compilation_cache_proto_rawDescGZIP(), []int{1}
}

func (x *XlaSerializedCacheEntry) GetKey() *XlaSerializedCacheKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *XlaSerializedCacheEntry) GetHloModule() *service.HloModuleProto {
	if x != nil {
		return x.HloModule
	}
	return nil
}

func (x *XlaSerializedCacheEntry) GetExecutable() []byte {
	if x != nil {
		return x.Executable
	}
	return nil
}

var File_tensorflow_compiler_jit_xla_compilation_cache_proto protoreflect.FileDescriptor

var file_tensorflow_compiler_jit_xla_compilation_cache_proto_rawDesc = []byte{
	0x0a, 0x33, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x6a, 0x69, 0x74, 0x2f, 0x78, 0x6c, 0x61, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x1a, 0x29, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f,
	0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x78, 0x6c, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x68, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x01, 0x0a,
	0x15, 0x58, 0x6c, 0x61, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x15, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0xa2, 0x01, 0x0a, 0x17, 0x58, 0x6c, 0x61, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x33, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x58, 0x6c, 0x61, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4b, 0x65,
	0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x0a, 0x68, 0x6c, 0x6f, 0x5f, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x78, 0x6c, 0x61,
	0x2e, 0x48, 0x6c, 0x6f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x09, 0x68, 0x6c, 0x6f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0xac, 0x01, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x42, 0x18, 0x58,
	0x6c, 0x61, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a, 0x36, 0x67, 0x69, 0x74,
	0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x63, 0x69, 0x69, 0x70, 0x2d, 0x69, 0x63, 0x70,
	0x2f, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f,
	0x6a, 0x69, 0x74, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x54, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0xca, 0x02, 0x0a, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0xe2, 0x02, 0x16, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x54,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_tensorflow_compiler_jit_xla_compilation_cache_proto_rawDescOnce sync.Once
	file_tensorflow_compiler_jit_xla_compilation_cache_proto_rawDescData = file_tensorflow_compiler_jit_xla_compilation_cache_proto_rawDesc
)

func file_tensorflow_compiler_jit_xla_compilation_cache_proto_rawDescGZIP() []byte {
	file_tensorflow_compiler_jit_xla_compilation_cache_proto_rawDescOnce.Do(func() {
		file_tensorflow_compiler_jit_xla_compilation_cache_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_compiler_jit_xla_compilation_cache_proto_rawDescData)
	})
	return file_tensorflow_compiler_jit_xla_compilation_cache_proto_rawDescData
}

var file_tensorflow_compiler_jit_xla_compilation_cache_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tensorflow_compiler_jit_xla_compilation_cache_proto_goTypes = []interface{}{
	(*XlaSerializedCacheKey)(nil),   // 0: tensorflow.XlaSerializedCacheKey
	(*XlaSerializedCacheEntry)(nil), // 1: tensorflow.XlaSerializedCacheEntry
	(*service.HloModuleProto)(nil),  // 2: xla.HloModuleProto
}
var file_tensorflow_compiler_jit_xla_compilation_cache_proto_depIdxs = []int32{
	0, // 0: tensorflow.XlaSerializedCacheEntry.key:type_name -> tensorflow.XlaSerializedCacheKey
	2, // 1: tensorflow.XlaSerializedCacheEntry.hlo_module:type_name -> xla.HloModuleProto
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_tensorflow_compiler_jit_xla_compilation_cache_proto_init() }
func file_tensorflow_compiler_jit_xla_compilation_cache_proto_init() {
	if File_tensorflow_compiler_jit_xla_compilation_cache_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_compiler_jit_xla_compilation_cache_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XlaSerializedCacheKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_jit_xla_compilation_cache_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XlaSerializedCacheEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_compiler_jit_xla_compilation_cache_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_compiler_jit_xla_compilation_cache_proto_goTypes,
		DependencyIndexes: file_tensorflow_compiler_jit_xla_compilation_cache_proto_depIdxs,
		MessageInfos:      file_tensorflow_compiler_jit_xla_compilation_cache_proto_msgTypes,
	}.Build()
	File_tensorflow_compiler_jit_xla_compilation_cache_proto = out.File
	file_tensorflow_compiler_jit_xla_compilation_cache_proto_rawDesc = nil
	file_tensorflow_compiler_jit_xla_compilation_cache_proto_goTypes = nil
	file_tensorflow_compiler_jit_xla_compilation_cache_proto_depIdxs = nil
}
