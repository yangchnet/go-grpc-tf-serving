// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tensorflow/tools/api/lib/api_objects.proto

package lib

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TFAPIMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Mtype *string `protobuf:"bytes,2,opt,name=mtype" json:"mtype,omitempty"`
}

func (x *TFAPIMember) Reset() {
	*x = TFAPIMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFAPIMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFAPIMember) ProtoMessage() {}

func (x *TFAPIMember) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFAPIMember.ProtoReflect.Descriptor instead.
func (*TFAPIMember) Descriptor() ([]byte, []int) {
	return file_tensorflow_tools_api_lib_api_objects_proto_rawDescGZIP(), []int{0}
}

func (x *TFAPIMember) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TFAPIMember) GetMtype() string {
	if x != nil && x.Mtype != nil {
		return *x.Mtype
	}
	return ""
}

type TFAPIMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Path    *string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Argspec *string `protobuf:"bytes,3,opt,name=argspec" json:"argspec,omitempty"`
}

func (x *TFAPIMethod) Reset() {
	*x = TFAPIMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFAPIMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFAPIMethod) ProtoMessage() {}

func (x *TFAPIMethod) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFAPIMethod.ProtoReflect.Descriptor instead.
func (*TFAPIMethod) Descriptor() ([]byte, []int) {
	return file_tensorflow_tools_api_lib_api_objects_proto_rawDescGZIP(), []int{1}
}

func (x *TFAPIMethod) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TFAPIMethod) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *TFAPIMethod) GetArgspec() string {
	if x != nil && x.Argspec != nil {
		return *x.Argspec
	}
	return ""
}

type TFAPIModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member       []*TFAPIMember `protobuf:"bytes,1,rep,name=member" json:"member,omitempty"`
	MemberMethod []*TFAPIMethod `protobuf:"bytes,2,rep,name=member_method,json=memberMethod" json:"member_method,omitempty"`
}

func (x *TFAPIModule) Reset() {
	*x = TFAPIModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFAPIModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFAPIModule) ProtoMessage() {}

func (x *TFAPIModule) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFAPIModule.ProtoReflect.Descriptor instead.
func (*TFAPIModule) Descriptor() ([]byte, []int) {
	return file_tensorflow_tools_api_lib_api_objects_proto_rawDescGZIP(), []int{2}
}

func (x *TFAPIModule) GetMember() []*TFAPIMember {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *TFAPIModule) GetMemberMethod() []*TFAPIMethod {
	if x != nil {
		return x.MemberMethod
	}
	return nil
}

type TFAPIClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInstance   []string       `protobuf:"bytes,1,rep,name=is_instance,json=isInstance" json:"is_instance,omitempty"`
	Member       []*TFAPIMember `protobuf:"bytes,2,rep,name=member" json:"member,omitempty"`
	MemberMethod []*TFAPIMethod `protobuf:"bytes,3,rep,name=member_method,json=memberMethod" json:"member_method,omitempty"`
}

func (x *TFAPIClass) Reset() {
	*x = TFAPIClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFAPIClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFAPIClass) ProtoMessage() {}

func (x *TFAPIClass) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFAPIClass.ProtoReflect.Descriptor instead.
func (*TFAPIClass) Descriptor() ([]byte, []int) {
	return file_tensorflow_tools_api_lib_api_objects_proto_rawDescGZIP(), []int{3}
}

func (x *TFAPIClass) GetIsInstance() []string {
	if x != nil {
		return x.IsInstance
	}
	return nil
}

func (x *TFAPIClass) GetMember() []*TFAPIMember {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *TFAPIClass) GetMemberMethod() []*TFAPIMethod {
	if x != nil {
		return x.MemberMethod
	}
	return nil
}

type TFAPIProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ *descriptorpb.DescriptorProto `protobuf:"bytes,1,opt,name=descriptor" json:"descriptor,omitempty"`
}

func (x *TFAPIProto) Reset() {
	*x = TFAPIProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFAPIProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFAPIProto) ProtoMessage() {}

func (x *TFAPIProto) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFAPIProto.ProtoReflect.Descriptor instead.
func (*TFAPIProto) Descriptor() ([]byte, []int) {
	return file_tensorflow_tools_api_lib_api_objects_proto_rawDescGZIP(), []int{4}
}

func (x *TFAPIProto) GetDescriptor_() *descriptorpb.DescriptorProto {
	if x != nil {
		return x.Descriptor_
	}
	return nil
}

type TFAPIObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     *string      `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	TfModule *TFAPIModule `protobuf:"bytes,2,opt,name=tf_module,json=tfModule" json:"tf_module,omitempty"`
	TfClass  *TFAPIClass  `protobuf:"bytes,3,opt,name=tf_class,json=tfClass" json:"tf_class,omitempty"`
	TfProto  *TFAPIProto  `protobuf:"bytes,4,opt,name=tf_proto,json=tfProto" json:"tf_proto,omitempty"`
}

func (x *TFAPIObject) Reset() {
	*x = TFAPIObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFAPIObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFAPIObject) ProtoMessage() {}

func (x *TFAPIObject) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFAPIObject.ProtoReflect.Descriptor instead.
func (*TFAPIObject) Descriptor() ([]byte, []int) {
	return file_tensorflow_tools_api_lib_api_objects_proto_rawDescGZIP(), []int{5}
}

func (x *TFAPIObject) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *TFAPIObject) GetTfModule() *TFAPIModule {
	if x != nil {
		return x.TfModule
	}
	return nil
}

func (x *TFAPIObject) GetTfClass() *TFAPIClass {
	if x != nil {
		return x.TfClass
	}
	return nil
}

func (x *TFAPIObject) GetTfProto() *TFAPIProto {
	if x != nil {
		return x.TfProto
	}
	return nil
}

var File_tensorflow_tools_api_lib_api_objects_proto protoreflect.FileDescriptor

var file_tensorflow_tools_api_lib_api_objects_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x37, 0x0a, 0x0b, 0x54, 0x46, 0x41, 0x50, 0x49, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4f, 0x0a, 0x0b, 0x54, 0x46, 0x41,
	0x50, 0x49, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x67, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x72, 0x67, 0x73, 0x70, 0x65, 0x63, 0x22, 0xa8, 0x01, 0x0a, 0x0b, 0x54,
	0x46, 0x41, 0x50, 0x49, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x46,
	0x41, 0x50, 0x49, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x52, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x46, 0x41, 0x50,
	0x49, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x0a, 0x54, 0x46, 0x41, 0x50, 0x49, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x46, 0x41, 0x50, 0x49, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x0d,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x46, 0x41, 0x50, 0x49, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x22, 0x52, 0x0a, 0x0a, 0x54, 0x46, 0x41, 0x50, 0x49, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x40,
	0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x3a, 0x02, 0x10, 0x01, 0x22, 0xff, 0x01, 0x0a, 0x0b, 0x54, 0x46, 0x41, 0x50, 0x49, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x4a, 0x0a, 0x09, 0x74, 0x66, 0x5f, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54,
	0x46, 0x41, 0x50, 0x49, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x74, 0x66, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x74, 0x66, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x46, 0x41, 0x50, 0x49, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x07, 0x74, 0x66, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x47, 0x0a,
	0x08, 0x74, 0x66, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x54, 0x46, 0x41, 0x50, 0x49, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x74,
	0x66, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x92, 0x02, 0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x42,
	0x0f, 0x41, 0x70, 0x69, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x48, 0x02, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x71, 0x63, 0x69, 0x69, 0x70, 0x2d, 0x69, 0x63, 0x70, 0x2f, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f,
	0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x62, 0xa2, 0x02, 0x04,
	0x54, 0x54, 0x54, 0x41, 0xaa, 0x02, 0x1f, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x54, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x41, 0x70, 0x69, 0xca, 0x02, 0x1f, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x5c, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x54,
	0x6f, 0x6f, 0x6c, 0x73, 0x5c, 0x41, 0x70, 0x69, 0xe2, 0x02, 0x2b, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x5c, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77,
	0x5c, 0x54, 0x6f, 0x6f, 0x6c, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x22, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x3a, 0x3a, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x3a,
	0x3a, 0x54, 0x6f, 0x6f, 0x6c, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x69,
}

var (
	file_tensorflow_tools_api_lib_api_objects_proto_rawDescOnce sync.Once
	file_tensorflow_tools_api_lib_api_objects_proto_rawDescData = file_tensorflow_tools_api_lib_api_objects_proto_rawDesc
)

func file_tensorflow_tools_api_lib_api_objects_proto_rawDescGZIP() []byte {
	file_tensorflow_tools_api_lib_api_objects_proto_rawDescOnce.Do(func() {
		file_tensorflow_tools_api_lib_api_objects_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_tools_api_lib_api_objects_proto_rawDescData)
	})
	return file_tensorflow_tools_api_lib_api_objects_proto_rawDescData
}

var file_tensorflow_tools_api_lib_api_objects_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_tensorflow_tools_api_lib_api_objects_proto_goTypes = []interface{}{
	(*TFAPIMember)(nil),                  // 0: third_party.tensorflow.tools.api.TFAPIMember
	(*TFAPIMethod)(nil),                  // 1: third_party.tensorflow.tools.api.TFAPIMethod
	(*TFAPIModule)(nil),                  // 2: third_party.tensorflow.tools.api.TFAPIModule
	(*TFAPIClass)(nil),                   // 3: third_party.tensorflow.tools.api.TFAPIClass
	(*TFAPIProto)(nil),                   // 4: third_party.tensorflow.tools.api.TFAPIProto
	(*TFAPIObject)(nil),                  // 5: third_party.tensorflow.tools.api.TFAPIObject
	(*descriptorpb.DescriptorProto)(nil), // 6: google.protobuf.DescriptorProto
}
var file_tensorflow_tools_api_lib_api_objects_proto_depIdxs = []int32{
	0, // 0: third_party.tensorflow.tools.api.TFAPIModule.member:type_name -> third_party.tensorflow.tools.api.TFAPIMember
	1, // 1: third_party.tensorflow.tools.api.TFAPIModule.member_method:type_name -> third_party.tensorflow.tools.api.TFAPIMethod
	0, // 2: third_party.tensorflow.tools.api.TFAPIClass.member:type_name -> third_party.tensorflow.tools.api.TFAPIMember
	1, // 3: third_party.tensorflow.tools.api.TFAPIClass.member_method:type_name -> third_party.tensorflow.tools.api.TFAPIMethod
	6, // 4: third_party.tensorflow.tools.api.TFAPIProto.descriptor:type_name -> google.protobuf.DescriptorProto
	2, // 5: third_party.tensorflow.tools.api.TFAPIObject.tf_module:type_name -> third_party.tensorflow.tools.api.TFAPIModule
	3, // 6: third_party.tensorflow.tools.api.TFAPIObject.tf_class:type_name -> third_party.tensorflow.tools.api.TFAPIClass
	4, // 7: third_party.tensorflow.tools.api.TFAPIObject.tf_proto:type_name -> third_party.tensorflow.tools.api.TFAPIProto
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_tensorflow_tools_api_lib_api_objects_proto_init() }
func file_tensorflow_tools_api_lib_api_objects_proto_init() {
	if File_tensorflow_tools_api_lib_api_objects_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFAPIMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFAPIMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFAPIModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFAPIClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFAPIProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tools_api_lib_api_objects_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFAPIObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_tools_api_lib_api_objects_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_tools_api_lib_api_objects_proto_goTypes,
		DependencyIndexes: file_tensorflow_tools_api_lib_api_objects_proto_depIdxs,
		MessageInfos:      file_tensorflow_tools_api_lib_api_objects_proto_msgTypes,
	}.Build()
	File_tensorflow_tools_api_lib_api_objects_proto = out.File
	file_tensorflow_tools_api_lib_api_objects_proto_rawDesc = nil
	file_tensorflow_tools_api_lib_api_objects_proto_goTypes = nil
	file_tensorflow_tools_api_lib_api_objects_proto_depIdxs = nil
}
