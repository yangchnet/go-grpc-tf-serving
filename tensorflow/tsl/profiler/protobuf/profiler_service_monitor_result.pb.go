// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tensorflow/tsl/profiler/protobuf/profiler_service_monitor_result.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the different types of responses from the profiling service.
type ProfilerServiceMonitorResult_ResponseType int32

const (
	// No result is returned from the profiling service.
	ProfilerServiceMonitorResult_EMPTY_RESULT ProfilerServiceMonitorResult_ResponseType = 0
	// Only device utilization is available.
	ProfilerServiceMonitorResult_UTIL_ONLY ProfilerServiceMonitorResult_ResponseType = 1
	// Both device utilization and device idle time are available.
	ProfilerServiceMonitorResult_UTIL_IDLE ProfilerServiceMonitorResult_ResponseType = 2
	// Device utilization, device idle time, step time, and infeed percentage
	// are all available.
	ProfilerServiceMonitorResult_UTIL_IDLE_STEP ProfilerServiceMonitorResult_ResponseType = 3
)

// Enum value maps for ProfilerServiceMonitorResult_ResponseType.
var (
	ProfilerServiceMonitorResult_ResponseType_name = map[int32]string{
		0: "EMPTY_RESULT",
		1: "UTIL_ONLY",
		2: "UTIL_IDLE",
		3: "UTIL_IDLE_STEP",
	}
	ProfilerServiceMonitorResult_ResponseType_value = map[string]int32{
		"EMPTY_RESULT":   0,
		"UTIL_ONLY":      1,
		"UTIL_IDLE":      2,
		"UTIL_IDLE_STEP": 3,
	}
)

func (x ProfilerServiceMonitorResult_ResponseType) Enum() *ProfilerServiceMonitorResult_ResponseType {
	p := new(ProfilerServiceMonitorResult_ResponseType)
	*p = x
	return p
}

func (x ProfilerServiceMonitorResult_ResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProfilerServiceMonitorResult_ResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_enumTypes[0].Descriptor()
}

func (ProfilerServiceMonitorResult_ResponseType) Type() protoreflect.EnumType {
	return &file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_enumTypes[0]
}

func (x ProfilerServiceMonitorResult_ResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProfilerServiceMonitorResult_ResponseType.Descriptor instead.
func (ProfilerServiceMonitorResult_ResponseType) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_rawDescGZIP(), []int{0, 0}
}

type ProfilerServiceMonitorResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of profiling responses.
	ResponseType ProfilerServiceMonitorResult_ResponseType `protobuf:"varint,1,opt,name=response_type,json=responseType,proto3,enum=tensorflow.ProfilerServiceMonitorResult_ResponseType" json:"response_type,omitempty"`
	// Percentage of time when device is idle.
	DeviceIdleTimePercent float64 `protobuf:"fixed64,2,opt,name=device_idle_time_percent,json=deviceIdleTimePercent,proto3" json:"device_idle_time_percent,omitempty"`
	// TPU matrix unit utilization percentage.
	MatrixUnitUtilizationPercent float64 `protobuf:"fixed64,3,opt,name=matrix_unit_utilization_percent,json=matrixUnitUtilizationPercent,proto3" json:"matrix_unit_utilization_percent,omitempty"`
	// Average step time in millisecond.
	StepTimeMsAvg float64 `protobuf:"fixed64,4,opt,name=step_time_ms_avg,json=stepTimeMsAvg,proto3" json:"step_time_ms_avg,omitempty"`
	// Minimum step time in millisecond.
	StepTimeMsMin float64 `protobuf:"fixed64,5,opt,name=step_time_ms_min,json=stepTimeMsMin,proto3" json:"step_time_ms_min,omitempty"`
	// Maximum step time in millisecond.
	StepTimeMsMax float64 `protobuf:"fixed64,6,opt,name=step_time_ms_max,json=stepTimeMsMax,proto3" json:"step_time_ms_max,omitempty"`
	// Average infeed percentage.
	InfeedPercentAvg float64 `protobuf:"fixed64,7,opt,name=infeed_percent_avg,json=infeedPercentAvg,proto3" json:"infeed_percent_avg,omitempty"`
	// Minimum infeed percentage.
	InfeedPercentMin float64 `protobuf:"fixed64,8,opt,name=infeed_percent_min,json=infeedPercentMin,proto3" json:"infeed_percent_min,omitempty"`
	// Maximum infeed percentage.
	InfeedPercentMax float64 `protobuf:"fixed64,9,opt,name=infeed_percent_max,json=infeedPercentMax,proto3" json:"infeed_percent_max,omitempty"`
}

func (x *ProfilerServiceMonitorResult) Reset() {
	*x = ProfilerServiceMonitorResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfilerServiceMonitorResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfilerServiceMonitorResult) ProtoMessage() {}

func (x *ProfilerServiceMonitorResult) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfilerServiceMonitorResult.ProtoReflect.Descriptor instead.
func (*ProfilerServiceMonitorResult) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_rawDescGZIP(), []int{0}
}

func (x *ProfilerServiceMonitorResult) GetResponseType() ProfilerServiceMonitorResult_ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return ProfilerServiceMonitorResult_EMPTY_RESULT
}

func (x *ProfilerServiceMonitorResult) GetDeviceIdleTimePercent() float64 {
	if x != nil {
		return x.DeviceIdleTimePercent
	}
	return 0
}

func (x *ProfilerServiceMonitorResult) GetMatrixUnitUtilizationPercent() float64 {
	if x != nil {
		return x.MatrixUnitUtilizationPercent
	}
	return 0
}

func (x *ProfilerServiceMonitorResult) GetStepTimeMsAvg() float64 {
	if x != nil {
		return x.StepTimeMsAvg
	}
	return 0
}

func (x *ProfilerServiceMonitorResult) GetStepTimeMsMin() float64 {
	if x != nil {
		return x.StepTimeMsMin
	}
	return 0
}

func (x *ProfilerServiceMonitorResult) GetStepTimeMsMax() float64 {
	if x != nil {
		return x.StepTimeMsMax
	}
	return 0
}

func (x *ProfilerServiceMonitorResult) GetInfeedPercentAvg() float64 {
	if x != nil {
		return x.InfeedPercentAvg
	}
	return 0
}

func (x *ProfilerServiceMonitorResult) GetInfeedPercentMin() float64 {
	if x != nil {
		return x.InfeedPercentMin
	}
	return 0
}

func (x *ProfilerServiceMonitorResult) GetInfeedPercentMax() float64 {
	if x != nil {
		return x.InfeedPercentMax
	}
	return 0
}

var File_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto protoreflect.FileDescriptor

var file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_rawDesc = []byte{
	0x0a, 0x46, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x74, 0x73, 0x6c,
	0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x22, 0xd3, 0x04, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x5a, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x6c, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x15, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x6c, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x1f, 0x6d, 0x61,
	0x74, 0x72, 0x69, 0x78, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x1c, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x55, 0x6e, 0x69, 0x74, 0x55,
	0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x27, 0x0a, 0x10, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d,
	0x73, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x74, 0x65,
	0x70, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x41, 0x76, 0x67, 0x12, 0x27, 0x0a, 0x10, 0x73, 0x74,
	0x65, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x74, 0x65, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73,
	0x4d, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x10, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x6d, 0x73, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73,
	0x74, 0x65, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x4d, 0x61, 0x78, 0x12, 0x2c, 0x0a, 0x12,
	0x69, 0x6e, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x76, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x69, 0x6e, 0x66, 0x65, 0x65, 0x64,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x41, 0x76, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6e,
	0x66, 0x65, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x69, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x69, 0x6e, 0x66, 0x65, 0x65, 0x64, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x4d, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6e, 0x66, 0x65,
	0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x69, 0x6e, 0x66, 0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x4d, 0x61, 0x78, 0x22, 0x52, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x5f,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x54, 0x49, 0x4c,
	0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x54, 0x49, 0x4c, 0x5f,
	0x49, 0x44, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x54, 0x49, 0x4c, 0x5f, 0x49,
	0x44, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x10, 0x03, 0x42, 0xbe, 0x01, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x42, 0x21, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x48, 0x02, 0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x71, 0x63, 0x69, 0x69, 0x70, 0x2d, 0x69, 0x63, 0x70, 0x2f, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f,
	0x74, 0x73, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x54, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0xca, 0x02, 0x0a, 0x54, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0xe2, 0x02, 0x16, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x0a, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_rawDescOnce sync.Once
	file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_rawDescData = file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_rawDesc
)

func file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_rawDescGZIP() []byte {
	file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_rawDescOnce.Do(func() {
		file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_rawDescData)
	})
	return file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_rawDescData
}

var file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_goTypes = []interface{}{
	(ProfilerServiceMonitorResult_ResponseType)(0), // 0: tensorflow.ProfilerServiceMonitorResult.ResponseType
	(*ProfilerServiceMonitorResult)(nil),           // 1: tensorflow.ProfilerServiceMonitorResult
}
var file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_depIdxs = []int32{
	0, // 0: tensorflow.ProfilerServiceMonitorResult.response_type:type_name -> tensorflow.ProfilerServiceMonitorResult.ResponseType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_init() }
func file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_init() {
	if File_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfilerServiceMonitorResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_goTypes,
		DependencyIndexes: file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_depIdxs,
		EnumInfos:         file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_enumTypes,
		MessageInfos:      file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_msgTypes,
	}.Build()
	File_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto = out.File
	file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_rawDesc = nil
	file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_goTypes = nil
	file_tensorflow_tsl_profiler_protobuf_profiler_service_monitor_result_proto_depIdxs = nil
}
