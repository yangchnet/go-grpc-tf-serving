// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tensorflow/tsl/protobuf/coordination_service.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the state of a remote worker
type CoordinatedTaskState int32

const (
	// TASKSTATE_UNSPECIFIED is an invalid state such that indicates a bug.
	CoordinatedTaskState_TASKSTATE_UNSPECIFIED CoordinatedTaskState = 0
	// TASKSTATE_UNINITIALIZED is an agent-only state. While the agent is
	// disconnected, the service has no way of knowing if the task is
	// initialized/uninitialized.
	CoordinatedTaskState_TASKSTATE_UNINITIALIZED CoordinatedTaskState = 1
	CoordinatedTaskState_TASKSTATE_DISCONNECTED  CoordinatedTaskState = 2
	CoordinatedTaskState_TASKSTATE_CONNECTED     CoordinatedTaskState = 3
	CoordinatedTaskState_TASKSTATE_ERROR         CoordinatedTaskState = 4
)

// Enum value maps for CoordinatedTaskState.
var (
	CoordinatedTaskState_name = map[int32]string{
		0: "TASKSTATE_UNSPECIFIED",
		1: "TASKSTATE_UNINITIALIZED",
		2: "TASKSTATE_DISCONNECTED",
		3: "TASKSTATE_CONNECTED",
		4: "TASKSTATE_ERROR",
	}
	CoordinatedTaskState_value = map[string]int32{
		"TASKSTATE_UNSPECIFIED":   0,
		"TASKSTATE_UNINITIALIZED": 1,
		"TASKSTATE_DISCONNECTED":  2,
		"TASKSTATE_CONNECTED":     3,
		"TASKSTATE_ERROR":         4,
	}
)

func (x CoordinatedTaskState) Enum() *CoordinatedTaskState {
	p := new(CoordinatedTaskState)
	*p = x
	return p
}

func (x CoordinatedTaskState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CoordinatedTaskState) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_enumTypes[0].Descriptor()
}

func (CoordinatedTaskState) Type() protoreflect.EnumType {
	return &file_tensorflow_tsl_protobuf_coordination_service_proto_enumTypes[0]
}

func (x CoordinatedTaskState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CoordinatedTaskState.Descriptor instead.
func (CoordinatedTaskState) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{0}
}

// Represents a remote worker task, specified by job name and task id.
type CoordinatedTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobName string `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	TaskId  int32  `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *CoordinatedTask) Reset() {
	*x = CoordinatedTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoordinatedTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinatedTask) ProtoMessage() {}

func (x *CoordinatedTask) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinatedTask.ProtoReflect.Descriptor instead.
func (*CoordinatedTask) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{0}
}

func (x *CoordinatedTask) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *CoordinatedTask) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

// Status payload for all coordination service errors.
// Note: an empty proto may be set if the error is triggered by the task's own
// agent calls (i.e. not propagated by the service from another remote task).
type CoordinationServiceError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If true, error is reported via the agent API by the user (and not an
	// internal service error).
	IsReportedError bool `protobuf:"varint,3,opt,name=is_reported_error,json=isReportedError,proto3" json:"is_reported_error,omitempty"`
	// Denotes which task hit the error. If unset, the error originated from the
	// same task that is processing this error.
	SourceTask *CoordinatedTask `protobuf:"bytes,4,opt,name=source_task,json=sourceTask,proto3" json:"source_task,omitempty"`
}

func (x *CoordinationServiceError) Reset() {
	*x = CoordinationServiceError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoordinationServiceError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinationServiceError) ProtoMessage() {}

func (x *CoordinationServiceError) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinationServiceError.ProtoReflect.Descriptor instead.
func (*CoordinationServiceError) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{1}
}

func (x *CoordinationServiceError) GetIsReportedError() bool {
	if x != nil {
		return x.IsReportedError
	}
	return false
}

func (x *CoordinationServiceError) GetSourceTask() *CoordinatedTask {
	if x != nil {
		return x.SourceTask
	}
	return nil
}

type CoordinatedTaskStateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task         *CoordinatedTask          `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	State        CoordinatedTaskState      `protobuf:"varint,2,opt,name=state,proto3,enum=tensorflow.CoordinatedTaskState" json:"state,omitempty"`
	ErrorCode    int32                     `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string                    `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ErrorPayload *CoordinationServiceError `protobuf:"bytes,5,opt,name=error_payload,json=errorPayload,proto3" json:"error_payload,omitempty"`
}

func (x *CoordinatedTaskStateInfo) Reset() {
	*x = CoordinatedTaskStateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoordinatedTaskStateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinatedTaskStateInfo) ProtoMessage() {}

func (x *CoordinatedTaskStateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinatedTaskStateInfo.ProtoReflect.Descriptor instead.
func (*CoordinatedTaskStateInfo) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{2}
}

func (x *CoordinatedTaskStateInfo) GetTask() *CoordinatedTask {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *CoordinatedTaskStateInfo) GetState() CoordinatedTaskState {
	if x != nil {
		return x.State
	}
	return CoordinatedTaskState_TASKSTATE_UNSPECIFIED
}

func (x *CoordinatedTaskStateInfo) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CoordinatedTaskStateInfo) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CoordinatedTaskStateInfo) GetErrorPayload() *CoordinationServiceError {
	if x != nil {
		return x.ErrorPayload
	}
	return nil
}

// Placeholder message to be extended by other runtimes' device representations.
type DeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device []*anypb.Any `protobuf:"bytes,1,rep,name=device,proto3" json:"device,omitempty"`
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeviceInfo) GetDevice() []*anypb.Any {
	if x != nil {
		return x.Device
	}
	return nil
}

// Request and response messages for registering a task to the cluster leader.
// A task is uniquely represented by its `job_name`, `task_id` and
// `incarnation`. Leader responds with its `incarnation` to identify a leader
// process.
type RegisterTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Incarnation uint64           `protobuf:"fixed64,3,opt,name=incarnation,proto3" json:"incarnation,omitempty"`
	SourceTask  *CoordinatedTask `protobuf:"bytes,5,opt,name=source_task,json=sourceTask,proto3" json:"source_task,omitempty"`
}

func (x *RegisterTaskRequest) Reset() {
	*x = RegisterTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTaskRequest) ProtoMessage() {}

func (x *RegisterTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTaskRequest.ProtoReflect.Descriptor instead.
func (*RegisterTaskRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterTaskRequest) GetIncarnation() uint64 {
	if x != nil {
		return x.Incarnation
	}
	return 0
}

func (x *RegisterTaskRequest) GetSourceTask() *CoordinatedTask {
	if x != nil {
		return x.SourceTask
	}
	return nil
}

type RegisterTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderIncarnation uint64 `protobuf:"fixed64,1,opt,name=leader_incarnation,json=leaderIncarnation,proto3" json:"leader_incarnation,omitempty"`
}

func (x *RegisterTaskResponse) Reset() {
	*x = RegisterTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTaskResponse) ProtoMessage() {}

func (x *RegisterTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTaskResponse.ProtoReflect.Descriptor instead.
func (*RegisterTaskResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterTaskResponse) GetLeaderIncarnation() uint64 {
	if x != nil {
		return x.LeaderIncarnation
	}
	return 0
}

// Request and response messages for sending heartbeats.
type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Incarnation uint64           `protobuf:"fixed64,3,opt,name=incarnation,proto3" json:"incarnation,omitempty"`
	SourceTask  *CoordinatedTask `protobuf:"bytes,4,opt,name=source_task,json=sourceTask,proto3" json:"source_task,omitempty"`
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{6}
}

func (x *HeartbeatRequest) GetIncarnation() uint64 {
	if x != nil {
		return x.Incarnation
	}
	return 0
}

func (x *HeartbeatRequest) GetSourceTask() *CoordinatedTask {
	if x != nil {
		return x.SourceTask
	}
	return nil
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderIncarnation uint64 `protobuf:"fixed64,1,opt,name=leader_incarnation,json=leaderIncarnation,proto3" json:"leader_incarnation,omitempty"`
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{7}
}

func (x *HeartbeatResponse) GetLeaderIncarnation() uint64 {
	if x != nil {
		return x.LeaderIncarnation
	}
	return 0
}

// Request and response messages for waiting for all tasks.
type WaitForAllTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceTask *CoordinatedTask `protobuf:"bytes,5,opt,name=source_task,json=sourceTask,proto3" json:"source_task,omitempty"`
	// All local device attributes on the request sender;
	DeviceInfo *DeviceInfo `protobuf:"bytes,6,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
}

func (x *WaitForAllTasksRequest) Reset() {
	*x = WaitForAllTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForAllTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForAllTasksRequest) ProtoMessage() {}

func (x *WaitForAllTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForAllTasksRequest.ProtoReflect.Descriptor instead.
func (*WaitForAllTasksRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{8}
}

func (x *WaitForAllTasksRequest) GetSourceTask() *CoordinatedTask {
	if x != nil {
		return x.SourceTask
	}
	return nil
}

func (x *WaitForAllTasksRequest) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

type WaitForAllTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderIncarnation uint64 `protobuf:"fixed64,1,opt,name=leader_incarnation,json=leaderIncarnation,proto3" json:"leader_incarnation,omitempty"`
	// All devices in the cluster.
	DeviceInfo *DeviceInfo `protobuf:"bytes,4,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
}

func (x *WaitForAllTasksResponse) Reset() {
	*x = WaitForAllTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForAllTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForAllTasksResponse) ProtoMessage() {}

func (x *WaitForAllTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForAllTasksResponse.ProtoReflect.Descriptor instead.
func (*WaitForAllTasksResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{9}
}

func (x *WaitForAllTasksResponse) GetLeaderIncarnation() uint64 {
	if x != nil {
		return x.LeaderIncarnation
	}
	return 0
}

func (x *WaitForAllTasksResponse) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

// Request and response messages for disconnecting a task from the service.
type ShutdownTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceTask *CoordinatedTask `protobuf:"bytes,1,opt,name=source_task,json=sourceTask,proto3" json:"source_task,omitempty"`
}

func (x *ShutdownTaskRequest) Reset() {
	*x = ShutdownTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownTaskRequest) ProtoMessage() {}

func (x *ShutdownTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownTaskRequest.ProtoReflect.Descriptor instead.
func (*ShutdownTaskRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{10}
}

func (x *ShutdownTaskRequest) GetSourceTask() *CoordinatedTask {
	if x != nil {
		return x.SourceTask
	}
	return nil
}

type ShutdownTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShutdownTaskResponse) Reset() {
	*x = ShutdownTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownTaskResponse) ProtoMessage() {}

func (x *ShutdownTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownTaskResponse.ProtoReflect.Descriptor instead.
func (*ShutdownTaskResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{11}
}

// Request and response messages for resetting a task state in the service.
type ResetTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceTask *CoordinatedTask `protobuf:"bytes,1,opt,name=source_task,json=sourceTask,proto3" json:"source_task,omitempty"`
}

func (x *ResetTaskRequest) Reset() {
	*x = ResetTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetTaskRequest) ProtoMessage() {}

func (x *ResetTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetTaskRequest.ProtoReflect.Descriptor instead.
func (*ResetTaskRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{12}
}

func (x *ResetTaskRequest) GetSourceTask() *CoordinatedTask {
	if x != nil {
		return x.SourceTask
	}
	return nil
}

type ResetTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetTaskResponse) Reset() {
	*x = ResetTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetTaskResponse) ProtoMessage() {}

func (x *ResetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetTaskResponse.ProtoReflect.Descriptor instead.
func (*ResetTaskResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{13}
}

// Request and response messages for reporting errors to task.
type ReportErrorToTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32                     `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string                    `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ErrorPayload *CoordinationServiceError `protobuf:"bytes,5,opt,name=error_payload,json=errorPayload,proto3" json:"error_payload,omitempty"`
}

func (x *ReportErrorToTaskRequest) Reset() {
	*x = ReportErrorToTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportErrorToTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportErrorToTaskRequest) ProtoMessage() {}

func (x *ReportErrorToTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportErrorToTaskRequest.ProtoReflect.Descriptor instead.
func (*ReportErrorToTaskRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{14}
}

func (x *ReportErrorToTaskRequest) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ReportErrorToTaskRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ReportErrorToTaskRequest) GetErrorPayload() *CoordinationServiceError {
	if x != nil {
		return x.ErrorPayload
	}
	return nil
}

type ReportErrorToTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportErrorToTaskResponse) Reset() {
	*x = ReportErrorToTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportErrorToTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportErrorToTaskResponse) ProtoMessage() {}

func (x *ReportErrorToTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportErrorToTaskResponse.ProtoReflect.Descriptor instead.
func (*ReportErrorToTaskResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{15}
}

// Request and response messages for reporting errors to service instance.
type ReportErrorToServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32            `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string           `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ErrorOrigin  *CoordinatedTask `protobuf:"bytes,5,opt,name=error_origin,json=errorOrigin,proto3" json:"error_origin,omitempty"`
}

func (x *ReportErrorToServiceRequest) Reset() {
	*x = ReportErrorToServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportErrorToServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportErrorToServiceRequest) ProtoMessage() {}

func (x *ReportErrorToServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportErrorToServiceRequest.ProtoReflect.Descriptor instead.
func (*ReportErrorToServiceRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{16}
}

func (x *ReportErrorToServiceRequest) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ReportErrorToServiceRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ReportErrorToServiceRequest) GetErrorOrigin() *CoordinatedTask {
	if x != nil {
		return x.ErrorOrigin
	}
	return nil
}

type ReportErrorToServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportErrorToServiceResponse) Reset() {
	*x = ReportErrorToServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportErrorToServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportErrorToServiceResponse) ProtoMessage() {}

func (x *ReportErrorToServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportErrorToServiceResponse.ProtoReflect.Descriptor instead.
func (*ReportErrorToServiceResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{17}
}

// Request and response messages for getting state of a remote task.
type GetTaskStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceTask []*CoordinatedTask `protobuf:"bytes,1,rep,name=source_task,json=sourceTask,proto3" json:"source_task,omitempty"`
}

func (x *GetTaskStateRequest) Reset() {
	*x = GetTaskStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskStateRequest) ProtoMessage() {}

func (x *GetTaskStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskStateRequest.ProtoReflect.Descriptor instead.
func (*GetTaskStateRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetTaskStateRequest) GetSourceTask() []*CoordinatedTask {
	if x != nil {
		return x.SourceTask
	}
	return nil
}

type GetTaskStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskState []*CoordinatedTaskStateInfo `protobuf:"bytes,1,rep,name=task_state,json=taskState,proto3" json:"task_state,omitempty"`
}

func (x *GetTaskStateResponse) Reset() {
	*x = GetTaskStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskStateResponse) ProtoMessage() {}

func (x *GetTaskStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskStateResponse.ProtoReflect.Descriptor instead.
func (*GetTaskStateResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetTaskStateResponse) GetTaskState() []*CoordinatedTaskStateInfo {
	if x != nil {
		return x.TaskState
	}
	return nil
}

// Message for configuration key value.
// Key is structured like Unix file system, with multiple levels of directory
// names separated by the slash ('/') characters.
type KeyValueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyValueEntry) Reset() {
	*x = KeyValueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValueEntry) ProtoMessage() {}

func (x *KeyValueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValueEntry.ProtoReflect.Descriptor instead.
func (*KeyValueEntry) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{20}
}

func (x *KeyValueEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValueEntry) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Request and response messages for inserting configuration key-value data.
type InsertKeyValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kv *KeyValueEntry `protobuf:"bytes,1,opt,name=kv,proto3" json:"kv,omitempty"`
}

func (x *InsertKeyValueRequest) Reset() {
	*x = InsertKeyValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertKeyValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertKeyValueRequest) ProtoMessage() {}

func (x *InsertKeyValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertKeyValueRequest.ProtoReflect.Descriptor instead.
func (*InsertKeyValueRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{21}
}

func (x *InsertKeyValueRequest) GetKv() *KeyValueEntry {
	if x != nil {
		return x.Kv
	}
	return nil
}

type InsertKeyValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InsertKeyValueResponse) Reset() {
	*x = InsertKeyValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertKeyValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertKeyValueResponse) ProtoMessage() {}

func (x *InsertKeyValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertKeyValueResponse.ProtoReflect.Descriptor instead.
func (*InsertKeyValueResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{22}
}

// Request and response messages for getting configuration key-value data.
type GetKeyValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetKeyValueRequest) Reset() {
	*x = GetKeyValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyValueRequest) ProtoMessage() {}

func (x *GetKeyValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyValueRequest.ProtoReflect.Descriptor instead.
func (*GetKeyValueRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetKeyValueRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetKeyValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kv *KeyValueEntry `protobuf:"bytes,1,opt,name=kv,proto3" json:"kv,omitempty"`
}

func (x *GetKeyValueResponse) Reset() {
	*x = GetKeyValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyValueResponse) ProtoMessage() {}

func (x *GetKeyValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyValueResponse.ProtoReflect.Descriptor instead.
func (*GetKeyValueResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetKeyValueResponse) GetKv() *KeyValueEntry {
	if x != nil {
		return x.Kv
	}
	return nil
}

type TryGetKeyValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *TryGetKeyValueRequest) Reset() {
	*x = TryGetKeyValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TryGetKeyValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryGetKeyValueRequest) ProtoMessage() {}

func (x *TryGetKeyValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryGetKeyValueRequest.ProtoReflect.Descriptor instead.
func (*TryGetKeyValueRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{25}
}

func (x *TryGetKeyValueRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type TryGetKeyValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kv *KeyValueEntry `protobuf:"bytes,1,opt,name=kv,proto3" json:"kv,omitempty"`
}

func (x *TryGetKeyValueResponse) Reset() {
	*x = TryGetKeyValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TryGetKeyValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryGetKeyValueResponse) ProtoMessage() {}

func (x *TryGetKeyValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryGetKeyValueResponse.ProtoReflect.Descriptor instead.
func (*TryGetKeyValueResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{26}
}

func (x *TryGetKeyValueResponse) GetKv() *KeyValueEntry {
	if x != nil {
		return x.Kv
	}
	return nil
}

type GetKeyValueDirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectoryKey string `protobuf:"bytes,1,opt,name=directory_key,json=directoryKey,proto3" json:"directory_key,omitempty"`
}

func (x *GetKeyValueDirRequest) Reset() {
	*x = GetKeyValueDirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyValueDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyValueDirRequest) ProtoMessage() {}

func (x *GetKeyValueDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyValueDirRequest.ProtoReflect.Descriptor instead.
func (*GetKeyValueDirRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{27}
}

func (x *GetKeyValueDirRequest) GetDirectoryKey() string {
	if x != nil {
		return x.DirectoryKey
	}
	return ""
}

type GetKeyValueDirResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectoryKey string           `protobuf:"bytes,1,opt,name=directory_key,json=directoryKey,proto3" json:"directory_key,omitempty"`
	Kv           []*KeyValueEntry `protobuf:"bytes,2,rep,name=kv,proto3" json:"kv,omitempty"`
}

func (x *GetKeyValueDirResponse) Reset() {
	*x = GetKeyValueDirResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyValueDirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyValueDirResponse) ProtoMessage() {}

func (x *GetKeyValueDirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyValueDirResponse.ProtoReflect.Descriptor instead.
func (*GetKeyValueDirResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{28}
}

func (x *GetKeyValueDirResponse) GetDirectoryKey() string {
	if x != nil {
		return x.DirectoryKey
	}
	return ""
}

func (x *GetKeyValueDirResponse) GetKv() []*KeyValueEntry {
	if x != nil {
		return x.Kv
	}
	return nil
}

// Request and response messages for deleting configuration key-value data.
// When is_directory is true, delete key-values recursively under `key`.
type DeleteKeyValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	IsDirectory bool   `protobuf:"varint,2,opt,name=is_directory,json=isDirectory,proto3" json:"is_directory,omitempty"`
}

func (x *DeleteKeyValueRequest) Reset() {
	*x = DeleteKeyValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKeyValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKeyValueRequest) ProtoMessage() {}

func (x *DeleteKeyValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKeyValueRequest.ProtoReflect.Descriptor instead.
func (*DeleteKeyValueRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteKeyValueRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteKeyValueRequest) GetIsDirectory() bool {
	if x != nil {
		return x.IsDirectory
	}
	return false
}

type DeleteKeyValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteKeyValueResponse) Reset() {
	*x = DeleteKeyValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKeyValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKeyValueResponse) ProtoMessage() {}

func (x *DeleteKeyValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKeyValueResponse.ProtoReflect.Descriptor instead.
func (*DeleteKeyValueResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{30}
}

// Request and response messages for generic sync barriers.
type BarrierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BarrierId          string `protobuf:"bytes,1,opt,name=barrier_id,json=barrierId,proto3" json:"barrier_id,omitempty"`
	BarrierTimeoutInMs int64  `protobuf:"varint,2,opt,name=barrier_timeout_in_ms,json=barrierTimeoutInMs,proto3" json:"barrier_timeout_in_ms,omitempty"`
	// Denotes list of tasks that will wait for the barrier. If unspecified, it
	// implies that the entire cluster is participating in the barrier.
	Tasks []*CoordinatedTask `protobuf:"bytes,3,rep,name=tasks,proto3" json:"tasks,omitempty"`
	// Task that is making the request.
	SourceTask *CoordinatedTask `protobuf:"bytes,4,opt,name=source_task,json=sourceTask,proto3" json:"source_task,omitempty"`
}

func (x *BarrierRequest) Reset() {
	*x = BarrierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BarrierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarrierRequest) ProtoMessage() {}

func (x *BarrierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarrierRequest.ProtoReflect.Descriptor instead.
func (*BarrierRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{31}
}

func (x *BarrierRequest) GetBarrierId() string {
	if x != nil {
		return x.BarrierId
	}
	return ""
}

func (x *BarrierRequest) GetBarrierTimeoutInMs() int64 {
	if x != nil {
		return x.BarrierTimeoutInMs
	}
	return 0
}

func (x *BarrierRequest) GetTasks() []*CoordinatedTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *BarrierRequest) GetSourceTask() *CoordinatedTask {
	if x != nil {
		return x.SourceTask
	}
	return nil
}

type BarrierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BarrierResponse) Reset() {
	*x = BarrierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BarrierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarrierResponse) ProtoMessage() {}

func (x *BarrierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarrierResponse.ProtoReflect.Descriptor instead.
func (*BarrierResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{32}
}

// Request and response messages for  cancelling generic sync barriers.
type CancelBarrierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BarrierId string `protobuf:"bytes,1,opt,name=barrier_id,json=barrierId,proto3" json:"barrier_id,omitempty"`
	// Task that is making the request.
	SourceTask *CoordinatedTask `protobuf:"bytes,2,opt,name=source_task,json=sourceTask,proto3" json:"source_task,omitempty"`
}

func (x *CancelBarrierRequest) Reset() {
	*x = CancelBarrierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelBarrierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelBarrierRequest) ProtoMessage() {}

func (x *CancelBarrierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelBarrierRequest.ProtoReflect.Descriptor instead.
func (*CancelBarrierRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{33}
}

func (x *CancelBarrierRequest) GetBarrierId() string {
	if x != nil {
		return x.BarrierId
	}
	return ""
}

func (x *CancelBarrierRequest) GetSourceTask() *CoordinatedTask {
	if x != nil {
		return x.SourceTask
	}
	return nil
}

type CancelBarrierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelBarrierResponse) Reset() {
	*x = CancelBarrierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelBarrierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelBarrierResponse) ProtoMessage() {}

func (x *CancelBarrierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelBarrierResponse.ProtoReflect.Descriptor instead.
func (*CancelBarrierResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP(), []int{34}
}

var File_tensorflow_tsl_protobuf_coordination_service_proto protoreflect.FileDescriptor

var file_tensorflow_tsl_protobuf_coordination_service_proto_rawDesc = []byte{
	0x0a, 0x32, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x74, 0x73, 0x6c,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a, 0x0f, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x19,
	0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x0b, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a,
	0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x92, 0x02, 0x0a, 0x18, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x49, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x3a, 0x0a, 0x0a, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4a, 0x04,
	0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05,
	0x22, 0x45, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x11, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x61,
	0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7e, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x0b, 0x69, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a,
	0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4a, 0x04, 0x08, 0x01, 0x10,
	0x02, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x42, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x12,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x11, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x49, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa7, 0x01, 0x0a, 0x16,
	0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x37, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4a, 0x04, 0x08,
	0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a,
	0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x8d, 0x01, 0x0a, 0x17, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f,
	0x72, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x12, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x63, 0x61,
	0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x11, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x37, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x4a,
	0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0x53, 0x0a, 0x13, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77,
	0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0a,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x68,
	0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x50, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x18, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x04, 0x10,
	0x05, 0x22, 0x1b, 0x0a, 0x19, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xad,
	0x01, 0x0a, 0x1b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x6f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x1e,
	0x0a, 0x1c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x6f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x22, 0x5b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x37, 0x0a, 0x0d, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x15, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x02, 0x6b, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x6b, 0x76, 0x22, 0x18, 0x0a,
	0x16, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x40, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x02, 0x6b, 0x76, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x6b,
	0x76, 0x22, 0x29, 0x0a, 0x15, 0x54, 0x72, 0x79, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x43, 0x0a, 0x16,
	0x54, 0x72, 0x79, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x02, 0x6b, 0x76, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x6b,
	0x76, 0x22, 0x3c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x22,
	0x68, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x69,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x29,
	0x0a, 0x02, 0x6b, 0x76, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x6b, 0x76, 0x22, 0x4c, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xd3, 0x01, 0x0a, 0x0e, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x12, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x49, 0x6e, 0x4d, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x11, 0x0a, 0x0f, 0x42, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x73, 0x0a, 0x14, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x22,
	0x17, 0x0a, 0x15, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x98, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17,
	0x54, 0x41, 0x53, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x4e, 0x49, 0x54,
	0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x41, 0x53,
	0x4b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43,
	0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x13,
	0x0a, 0x0f, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x04, 0x32, 0x99, 0x0a, 0x0a, 0x13, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1f, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1c, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x57, 0x61, 0x69, 0x74,
	0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x22, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72,
	0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x61, 0x69,
	0x74, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x1f, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x1c, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x60, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x24, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x6f, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x6f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f,
	0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x2e, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x54, 0x72,
	0x79, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x54, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x54, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x44, 0x69, 0x72, 0x12, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x69,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21,
	0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x12, 0x1a, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x42, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0xac, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x42, 0x18, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01,
	0x5a, 0x36, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x63, 0x69, 0x69,
	0x70, 0x2d, 0x69, 0x63, 0x70, 0x2f, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x74, 0x73, 0x6c, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02,
	0x0a, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0xca, 0x02, 0x0a, 0x54, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0xe2, 0x02, 0x16, 0x54, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x0a, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescOnce sync.Once
	file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescData = file_tensorflow_tsl_protobuf_coordination_service_proto_rawDesc
)

func file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescGZIP() []byte {
	file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescOnce.Do(func() {
		file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescData)
	})
	return file_tensorflow_tsl_protobuf_coordination_service_proto_rawDescData
}

var file_tensorflow_tsl_protobuf_coordination_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_tensorflow_tsl_protobuf_coordination_service_proto_goTypes = []interface{}{
	(CoordinatedTaskState)(0),            // 0: tensorflow.CoordinatedTaskState
	(*CoordinatedTask)(nil),              // 1: tensorflow.CoordinatedTask
	(*CoordinationServiceError)(nil),     // 2: tensorflow.CoordinationServiceError
	(*CoordinatedTaskStateInfo)(nil),     // 3: tensorflow.CoordinatedTaskStateInfo
	(*DeviceInfo)(nil),                   // 4: tensorflow.DeviceInfo
	(*RegisterTaskRequest)(nil),          // 5: tensorflow.RegisterTaskRequest
	(*RegisterTaskResponse)(nil),         // 6: tensorflow.RegisterTaskResponse
	(*HeartbeatRequest)(nil),             // 7: tensorflow.HeartbeatRequest
	(*HeartbeatResponse)(nil),            // 8: tensorflow.HeartbeatResponse
	(*WaitForAllTasksRequest)(nil),       // 9: tensorflow.WaitForAllTasksRequest
	(*WaitForAllTasksResponse)(nil),      // 10: tensorflow.WaitForAllTasksResponse
	(*ShutdownTaskRequest)(nil),          // 11: tensorflow.ShutdownTaskRequest
	(*ShutdownTaskResponse)(nil),         // 12: tensorflow.ShutdownTaskResponse
	(*ResetTaskRequest)(nil),             // 13: tensorflow.ResetTaskRequest
	(*ResetTaskResponse)(nil),            // 14: tensorflow.ResetTaskResponse
	(*ReportErrorToTaskRequest)(nil),     // 15: tensorflow.ReportErrorToTaskRequest
	(*ReportErrorToTaskResponse)(nil),    // 16: tensorflow.ReportErrorToTaskResponse
	(*ReportErrorToServiceRequest)(nil),  // 17: tensorflow.ReportErrorToServiceRequest
	(*ReportErrorToServiceResponse)(nil), // 18: tensorflow.ReportErrorToServiceResponse
	(*GetTaskStateRequest)(nil),          // 19: tensorflow.GetTaskStateRequest
	(*GetTaskStateResponse)(nil),         // 20: tensorflow.GetTaskStateResponse
	(*KeyValueEntry)(nil),                // 21: tensorflow.KeyValueEntry
	(*InsertKeyValueRequest)(nil),        // 22: tensorflow.InsertKeyValueRequest
	(*InsertKeyValueResponse)(nil),       // 23: tensorflow.InsertKeyValueResponse
	(*GetKeyValueRequest)(nil),           // 24: tensorflow.GetKeyValueRequest
	(*GetKeyValueResponse)(nil),          // 25: tensorflow.GetKeyValueResponse
	(*TryGetKeyValueRequest)(nil),        // 26: tensorflow.TryGetKeyValueRequest
	(*TryGetKeyValueResponse)(nil),       // 27: tensorflow.TryGetKeyValueResponse
	(*GetKeyValueDirRequest)(nil),        // 28: tensorflow.GetKeyValueDirRequest
	(*GetKeyValueDirResponse)(nil),       // 29: tensorflow.GetKeyValueDirResponse
	(*DeleteKeyValueRequest)(nil),        // 30: tensorflow.DeleteKeyValueRequest
	(*DeleteKeyValueResponse)(nil),       // 31: tensorflow.DeleteKeyValueResponse
	(*BarrierRequest)(nil),               // 32: tensorflow.BarrierRequest
	(*BarrierResponse)(nil),              // 33: tensorflow.BarrierResponse
	(*CancelBarrierRequest)(nil),         // 34: tensorflow.CancelBarrierRequest
	(*CancelBarrierResponse)(nil),        // 35: tensorflow.CancelBarrierResponse
	(*anypb.Any)(nil),                    // 36: google.protobuf.Any
}
var file_tensorflow_tsl_protobuf_coordination_service_proto_depIdxs = []int32{
	1,  // 0: tensorflow.CoordinationServiceError.source_task:type_name -> tensorflow.CoordinatedTask
	1,  // 1: tensorflow.CoordinatedTaskStateInfo.task:type_name -> tensorflow.CoordinatedTask
	0,  // 2: tensorflow.CoordinatedTaskStateInfo.state:type_name -> tensorflow.CoordinatedTaskState
	2,  // 3: tensorflow.CoordinatedTaskStateInfo.error_payload:type_name -> tensorflow.CoordinationServiceError
	36, // 4: tensorflow.DeviceInfo.device:type_name -> google.protobuf.Any
	1,  // 5: tensorflow.RegisterTaskRequest.source_task:type_name -> tensorflow.CoordinatedTask
	1,  // 6: tensorflow.HeartbeatRequest.source_task:type_name -> tensorflow.CoordinatedTask
	1,  // 7: tensorflow.WaitForAllTasksRequest.source_task:type_name -> tensorflow.CoordinatedTask
	4,  // 8: tensorflow.WaitForAllTasksRequest.device_info:type_name -> tensorflow.DeviceInfo
	4,  // 9: tensorflow.WaitForAllTasksResponse.device_info:type_name -> tensorflow.DeviceInfo
	1,  // 10: tensorflow.ShutdownTaskRequest.source_task:type_name -> tensorflow.CoordinatedTask
	1,  // 11: tensorflow.ResetTaskRequest.source_task:type_name -> tensorflow.CoordinatedTask
	2,  // 12: tensorflow.ReportErrorToTaskRequest.error_payload:type_name -> tensorflow.CoordinationServiceError
	1,  // 13: tensorflow.ReportErrorToServiceRequest.error_origin:type_name -> tensorflow.CoordinatedTask
	1,  // 14: tensorflow.GetTaskStateRequest.source_task:type_name -> tensorflow.CoordinatedTask
	3,  // 15: tensorflow.GetTaskStateResponse.task_state:type_name -> tensorflow.CoordinatedTaskStateInfo
	21, // 16: tensorflow.InsertKeyValueRequest.kv:type_name -> tensorflow.KeyValueEntry
	21, // 17: tensorflow.GetKeyValueResponse.kv:type_name -> tensorflow.KeyValueEntry
	21, // 18: tensorflow.TryGetKeyValueResponse.kv:type_name -> tensorflow.KeyValueEntry
	21, // 19: tensorflow.GetKeyValueDirResponse.kv:type_name -> tensorflow.KeyValueEntry
	1,  // 20: tensorflow.BarrierRequest.tasks:type_name -> tensorflow.CoordinatedTask
	1,  // 21: tensorflow.BarrierRequest.source_task:type_name -> tensorflow.CoordinatedTask
	1,  // 22: tensorflow.CancelBarrierRequest.source_task:type_name -> tensorflow.CoordinatedTask
	5,  // 23: tensorflow.CoordinationService.RegisterTask:input_type -> tensorflow.RegisterTaskRequest
	7,  // 24: tensorflow.CoordinationService.Heartbeat:input_type -> tensorflow.HeartbeatRequest
	9,  // 25: tensorflow.CoordinationService.WaitForAllTasks:input_type -> tensorflow.WaitForAllTasksRequest
	11, // 26: tensorflow.CoordinationService.ShutdownTask:input_type -> tensorflow.ShutdownTaskRequest
	13, // 27: tensorflow.CoordinationService.ResetTask:input_type -> tensorflow.ResetTaskRequest
	15, // 28: tensorflow.CoordinationService.ReportErrorToTask:input_type -> tensorflow.ReportErrorToTaskRequest
	17, // 29: tensorflow.CoordinationService.ReportErrorToService:input_type -> tensorflow.ReportErrorToServiceRequest
	19, // 30: tensorflow.CoordinationService.GetTaskState:input_type -> tensorflow.GetTaskStateRequest
	22, // 31: tensorflow.CoordinationService.InsertKeyValue:input_type -> tensorflow.InsertKeyValueRequest
	24, // 32: tensorflow.CoordinationService.GetKeyValue:input_type -> tensorflow.GetKeyValueRequest
	26, // 33: tensorflow.CoordinationService.TryGetKeyValue:input_type -> tensorflow.TryGetKeyValueRequest
	28, // 34: tensorflow.CoordinationService.GetKeyValueDir:input_type -> tensorflow.GetKeyValueDirRequest
	30, // 35: tensorflow.CoordinationService.DeleteKeyValue:input_type -> tensorflow.DeleteKeyValueRequest
	32, // 36: tensorflow.CoordinationService.Barrier:input_type -> tensorflow.BarrierRequest
	34, // 37: tensorflow.CoordinationService.CancelBarrier:input_type -> tensorflow.CancelBarrierRequest
	6,  // 38: tensorflow.CoordinationService.RegisterTask:output_type -> tensorflow.RegisterTaskResponse
	8,  // 39: tensorflow.CoordinationService.Heartbeat:output_type -> tensorflow.HeartbeatResponse
	10, // 40: tensorflow.CoordinationService.WaitForAllTasks:output_type -> tensorflow.WaitForAllTasksResponse
	12, // 41: tensorflow.CoordinationService.ShutdownTask:output_type -> tensorflow.ShutdownTaskResponse
	14, // 42: tensorflow.CoordinationService.ResetTask:output_type -> tensorflow.ResetTaskResponse
	16, // 43: tensorflow.CoordinationService.ReportErrorToTask:output_type -> tensorflow.ReportErrorToTaskResponse
	18, // 44: tensorflow.CoordinationService.ReportErrorToService:output_type -> tensorflow.ReportErrorToServiceResponse
	20, // 45: tensorflow.CoordinationService.GetTaskState:output_type -> tensorflow.GetTaskStateResponse
	23, // 46: tensorflow.CoordinationService.InsertKeyValue:output_type -> tensorflow.InsertKeyValueResponse
	25, // 47: tensorflow.CoordinationService.GetKeyValue:output_type -> tensorflow.GetKeyValueResponse
	27, // 48: tensorflow.CoordinationService.TryGetKeyValue:output_type -> tensorflow.TryGetKeyValueResponse
	29, // 49: tensorflow.CoordinationService.GetKeyValueDir:output_type -> tensorflow.GetKeyValueDirResponse
	31, // 50: tensorflow.CoordinationService.DeleteKeyValue:output_type -> tensorflow.DeleteKeyValueResponse
	33, // 51: tensorflow.CoordinationService.Barrier:output_type -> tensorflow.BarrierResponse
	35, // 52: tensorflow.CoordinationService.CancelBarrier:output_type -> tensorflow.CancelBarrierResponse
	38, // [38:53] is the sub-list for method output_type
	23, // [23:38] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_tensorflow_tsl_protobuf_coordination_service_proto_init() }
func file_tensorflow_tsl_protobuf_coordination_service_proto_init() {
	if File_tensorflow_tsl_protobuf_coordination_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoordinatedTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoordinationServiceError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoordinatedTaskStateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForAllTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForAllTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportErrorToTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportErrorToTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportErrorToServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportErrorToServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertKeyValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertKeyValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TryGetKeyValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TryGetKeyValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyValueDirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyValueDirResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKeyValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKeyValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BarrierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BarrierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelBarrierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelBarrierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_tsl_protobuf_coordination_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tensorflow_tsl_protobuf_coordination_service_proto_goTypes,
		DependencyIndexes: file_tensorflow_tsl_protobuf_coordination_service_proto_depIdxs,
		EnumInfos:         file_tensorflow_tsl_protobuf_coordination_service_proto_enumTypes,
		MessageInfos:      file_tensorflow_tsl_protobuf_coordination_service_proto_msgTypes,
	}.Build()
	File_tensorflow_tsl_protobuf_coordination_service_proto = out.File
	file_tensorflow_tsl_protobuf_coordination_service_proto_rawDesc = nil
	file_tensorflow_tsl_protobuf_coordination_service_proto_goTypes = nil
	file_tensorflow_tsl_protobuf_coordination_service_proto_depIdxs = nil
}
