// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tensorflow/core/function/trace_type/default_types.proto

package trace_type

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a serialized Literal type.
type SerializedLiteral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*SerializedLiteral_BoolValue
	//	*SerializedLiteral_IntValue
	//	*SerializedLiteral_FloatValue
	//	*SerializedLiteral_StrValue
	//	*SerializedLiteral_NoneValue_
	Value isSerializedLiteral_Value `protobuf_oneof:"value"`
}

func (x *SerializedLiteral) Reset() {
	*x = SerializedLiteral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializedLiteral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializedLiteral) ProtoMessage() {}

func (x *SerializedLiteral) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializedLiteral.ProtoReflect.Descriptor instead.
func (*SerializedLiteral) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_function_trace_type_default_types_proto_rawDescGZIP(), []int{0}
}

func (m *SerializedLiteral) GetValue() isSerializedLiteral_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *SerializedLiteral) GetBoolValue() bool {
	if x, ok := x.GetValue().(*SerializedLiteral_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *SerializedLiteral) GetIntValue() int64 {
	if x, ok := x.GetValue().(*SerializedLiteral_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (x *SerializedLiteral) GetFloatValue() float64 {
	if x, ok := x.GetValue().(*SerializedLiteral_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (x *SerializedLiteral) GetStrValue() string {
	if x, ok := x.GetValue().(*SerializedLiteral_StrValue); ok {
		return x.StrValue
	}
	return ""
}

func (x *SerializedLiteral) GetNoneValue() *SerializedLiteral_NoneValue {
	if x, ok := x.GetValue().(*SerializedLiteral_NoneValue_); ok {
		return x.NoneValue
	}
	return nil
}

type isSerializedLiteral_Value interface {
	isSerializedLiteral_Value()
}

type SerializedLiteral_BoolValue struct {
	BoolValue bool `protobuf:"varint,1,opt,name=bool_value,json=boolValue,oneof"`
}

type SerializedLiteral_IntValue struct {
	IntValue int64 `protobuf:"varint,2,opt,name=int_value,json=intValue,oneof"`
}

type SerializedLiteral_FloatValue struct {
	FloatValue float64 `protobuf:"fixed64,3,opt,name=float_value,json=floatValue,oneof"` // Python "float" is double precision.
}

type SerializedLiteral_StrValue struct {
	StrValue string `protobuf:"bytes,4,opt,name=str_value,json=strValue,oneof"`
}

type SerializedLiteral_NoneValue_ struct {
	NoneValue *SerializedLiteral_NoneValue `protobuf:"bytes,5,opt,name=none_value,json=noneValue,oneof"`
}

func (*SerializedLiteral_BoolValue) isSerializedLiteral_Value() {}

func (*SerializedLiteral_IntValue) isSerializedLiteral_Value() {}

func (*SerializedLiteral_FloatValue) isSerializedLiteral_Value() {}

func (*SerializedLiteral_StrValue) isSerializedLiteral_Value() {}

func (*SerializedLiteral_NoneValue_) isSerializedLiteral_Value() {}

// Represents a serialized Tuple type.
type SerializedTuple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Components []*SerializedTraceType `protobuf:"bytes,1,rep,name=components" json:"components,omitempty"`
}

func (x *SerializedTuple) Reset() {
	*x = SerializedTuple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializedTuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializedTuple) ProtoMessage() {}

func (x *SerializedTuple) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializedTuple.ProtoReflect.Descriptor instead.
func (*SerializedTuple) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_function_trace_type_default_types_proto_rawDescGZIP(), []int{1}
}

func (x *SerializedTuple) GetComponents() []*SerializedTraceType {
	if x != nil {
		return x.Components
	}
	return nil
}

// Represents a serialized List type.
type SerializedList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComponentsTuple *SerializedTuple `protobuf:"bytes,1,opt,name=components_tuple,json=componentsTuple" json:"components_tuple,omitempty"`
}

func (x *SerializedList) Reset() {
	*x = SerializedList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializedList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializedList) ProtoMessage() {}

func (x *SerializedList) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializedList.ProtoReflect.Descriptor instead.
func (*SerializedList) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_function_trace_type_default_types_proto_rawDescGZIP(), []int{2}
}

func (x *SerializedList) GetComponentsTuple() *SerializedTuple {
	if x != nil {
		return x.ComponentsTuple
	}
	return nil
}

// Represents a serialized NamedTuple type.
type SerializedNamedTuple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName       *string          `protobuf:"bytes,1,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
	AttributeNames []string         `protobuf:"bytes,2,rep,name=attribute_names,json=attributeNames" json:"attribute_names,omitempty"`
	Attributes     *SerializedTuple `protobuf:"bytes,3,opt,name=attributes" json:"attributes,omitempty"`
}

func (x *SerializedNamedTuple) Reset() {
	*x = SerializedNamedTuple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializedNamedTuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializedNamedTuple) ProtoMessage() {}

func (x *SerializedNamedTuple) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializedNamedTuple.ProtoReflect.Descriptor instead.
func (*SerializedNamedTuple) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_function_trace_type_default_types_proto_rawDescGZIP(), []int{3}
}

func (x *SerializedNamedTuple) GetTypeName() string {
	if x != nil && x.TypeName != nil {
		return *x.TypeName
	}
	return ""
}

func (x *SerializedNamedTuple) GetAttributeNames() []string {
	if x != nil {
		return x.AttributeNames
	}
	return nil
}

func (x *SerializedNamedTuple) GetAttributes() *SerializedTuple {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Represents a serialized Attrs type.
type SerializedAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamedAttributes *SerializedNamedTuple `protobuf:"bytes,1,opt,name=named_attributes,json=namedAttributes" json:"named_attributes,omitempty"`
}

func (x *SerializedAttrs) Reset() {
	*x = SerializedAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializedAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializedAttrs) ProtoMessage() {}

func (x *SerializedAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializedAttrs.ProtoReflect.Descriptor instead.
func (*SerializedAttrs) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_function_trace_type_default_types_proto_rawDescGZIP(), []int{4}
}

func (x *SerializedAttrs) GetNamedAttributes() *SerializedNamedTuple {
	if x != nil {
		return x.NamedAttributes
	}
	return nil
}

// Represents a serialized Dict type.
type SerializedDict struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys   []*SerializedLiteral   `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
	Values []*SerializedTraceType `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
}

func (x *SerializedDict) Reset() {
	*x = SerializedDict{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializedDict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializedDict) ProtoMessage() {}

func (x *SerializedDict) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializedDict.ProtoReflect.Descriptor instead.
func (*SerializedDict) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_function_trace_type_default_types_proto_rawDescGZIP(), []int{5}
}

func (x *SerializedDict) GetKeys() []*SerializedLiteral {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *SerializedDict) GetValues() []*SerializedTraceType {
	if x != nil {
		return x.Values
	}
	return nil
}

type SerializedLiteral_NoneValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SerializedLiteral_NoneValue) Reset() {
	*x = SerializedLiteral_NoneValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializedLiteral_NoneValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializedLiteral_NoneValue) ProtoMessage() {}

func (x *SerializedLiteral_NoneValue) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializedLiteral_NoneValue.ProtoReflect.Descriptor instead.
func (*SerializedLiteral_NoneValue) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_function_trace_type_default_types_proto_rawDescGZIP(), []int{0, 0}
}

var File_tensorflow_core_function_trace_type_default_types_proto protoreflect.FileDescriptor

var file_tensorflow_core_function_trace_type_default_types_proto_rawDesc = []byte{
	0x0a, 0x37, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x31, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x37, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x02, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x62,
	0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x09,
	0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d,
	0x0a, 0x09, 0x73, 0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x08, 0x73, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x6f, 0x0a,
	0x0a, 0x6e, 0x6f, 0x6e, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x4e, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x6f, 0x6e, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0b,
	0x0a, 0x09, 0x4e, 0x6f, 0x6e, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x79, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x66, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x7f, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x6d, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x74, 0x75, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x52,
	0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x75, 0x70, 0x6c, 0x65,
	0x22, 0xc0, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x64, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x62, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x72, 0x0a, 0x10, 0x6e, 0x61, 0x6d, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x47, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x52, 0x0f, 0x6e, 0x61, 0x6d, 0x65,
	0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x0e,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x69, 0x63, 0x74, 0x12, 0x58,
	0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4c, 0x69, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x5e, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0xf4, 0x02, 0x0a, 0x35, 0x63, 0x6f, 0x6d,
	0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x42, 0x11, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x65, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x63, 0x69, 0x69, 0x70, 0x2d, 0x69, 0x63, 0x70, 0x2f, 0x74,
	0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0xa2, 0x02, 0x05,
	0x54, 0x43, 0x46, 0x54, 0x44, 0xaa, 0x02, 0x2f, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0xca, 0x02, 0x30, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x5c, 0x54, 0x72, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5c, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0xe2, 0x02, 0x3c, 0x54, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x5c, 0x54, 0x72, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x5c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x33, 0x54, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x3a, 0x3a, 0x43, 0x6f, 0x72, 0x65, 0x3a, 0x3a, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x54, 0x72, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x3a, 0x3a, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73,
}

var (
	file_tensorflow_core_function_trace_type_default_types_proto_rawDescOnce sync.Once
	file_tensorflow_core_function_trace_type_default_types_proto_rawDescData = file_tensorflow_core_function_trace_type_default_types_proto_rawDesc
)

func file_tensorflow_core_function_trace_type_default_types_proto_rawDescGZIP() []byte {
	file_tensorflow_core_function_trace_type_default_types_proto_rawDescOnce.Do(func() {
		file_tensorflow_core_function_trace_type_default_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_core_function_trace_type_default_types_proto_rawDescData)
	})
	return file_tensorflow_core_function_trace_type_default_types_proto_rawDescData
}

var file_tensorflow_core_function_trace_type_default_types_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_tensorflow_core_function_trace_type_default_types_proto_goTypes = []interface{}{
	(*SerializedLiteral)(nil),           // 0: tensorflow.core.function.trace_type.default_types.SerializedLiteral
	(*SerializedTuple)(nil),             // 1: tensorflow.core.function.trace_type.default_types.SerializedTuple
	(*SerializedList)(nil),              // 2: tensorflow.core.function.trace_type.default_types.SerializedList
	(*SerializedNamedTuple)(nil),        // 3: tensorflow.core.function.trace_type.default_types.SerializedNamedTuple
	(*SerializedAttrs)(nil),             // 4: tensorflow.core.function.trace_type.default_types.SerializedAttrs
	(*SerializedDict)(nil),              // 5: tensorflow.core.function.trace_type.default_types.SerializedDict
	(*SerializedLiteral_NoneValue)(nil), // 6: tensorflow.core.function.trace_type.default_types.SerializedLiteral.NoneValue
	(*SerializedTraceType)(nil),         // 7: tensorflow.core.function.trace_type.serialization.SerializedTraceType
}
var file_tensorflow_core_function_trace_type_default_types_proto_depIdxs = []int32{
	6, // 0: tensorflow.core.function.trace_type.default_types.SerializedLiteral.none_value:type_name -> tensorflow.core.function.trace_type.default_types.SerializedLiteral.NoneValue
	7, // 1: tensorflow.core.function.trace_type.default_types.SerializedTuple.components:type_name -> tensorflow.core.function.trace_type.serialization.SerializedTraceType
	1, // 2: tensorflow.core.function.trace_type.default_types.SerializedList.components_tuple:type_name -> tensorflow.core.function.trace_type.default_types.SerializedTuple
	1, // 3: tensorflow.core.function.trace_type.default_types.SerializedNamedTuple.attributes:type_name -> tensorflow.core.function.trace_type.default_types.SerializedTuple
	3, // 4: tensorflow.core.function.trace_type.default_types.SerializedAttrs.named_attributes:type_name -> tensorflow.core.function.trace_type.default_types.SerializedNamedTuple
	0, // 5: tensorflow.core.function.trace_type.default_types.SerializedDict.keys:type_name -> tensorflow.core.function.trace_type.default_types.SerializedLiteral
	7, // 6: tensorflow.core.function.trace_type.default_types.SerializedDict.values:type_name -> tensorflow.core.function.trace_type.serialization.SerializedTraceType
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_tensorflow_core_function_trace_type_default_types_proto_init() }
func file_tensorflow_core_function_trace_type_default_types_proto_init() {
	if File_tensorflow_core_function_trace_type_default_types_proto != nil {
		return
	}
	file_tensorflow_core_function_trace_type_serialization_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializedLiteral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializedTuple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializedList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializedNamedTuple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializedAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializedDict); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializedLiteral_NoneValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tensorflow_core_function_trace_type_default_types_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SerializedLiteral_BoolValue)(nil),
		(*SerializedLiteral_IntValue)(nil),
		(*SerializedLiteral_FloatValue)(nil),
		(*SerializedLiteral_StrValue)(nil),
		(*SerializedLiteral_NoneValue_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_core_function_trace_type_default_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_core_function_trace_type_default_types_proto_goTypes,
		DependencyIndexes: file_tensorflow_core_function_trace_type_default_types_proto_depIdxs,
		MessageInfos:      file_tensorflow_core_function_trace_type_default_types_proto_msgTypes,
	}.Build()
	File_tensorflow_core_function_trace_type_default_types_proto = out.File
	file_tensorflow_core_function_trace_type_default_types_proto_rawDesc = nil
	file_tensorflow_core_function_trace_type_default_types_proto_goTypes = nil
	file_tensorflow_core_function_trace_type_default_types_proto_depIdxs = nil
}
