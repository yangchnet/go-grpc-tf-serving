// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tensorflow/core/function/trace_type/serialization_test.proto

package trace_type

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a class with just two fields.
type MyCustomRepresentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index *int32  `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Name  *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *MyCustomRepresentation) Reset() {
	*x = MyCustomRepresentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_function_trace_type_serialization_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyCustomRepresentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyCustomRepresentation) ProtoMessage() {}

func (x *MyCustomRepresentation) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_function_trace_type_serialization_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyCustomRepresentation.ProtoReflect.Descriptor instead.
func (*MyCustomRepresentation) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_function_trace_type_serialization_test_proto_rawDescGZIP(), []int{0}
}

func (x *MyCustomRepresentation) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *MyCustomRepresentation) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// Represents a class that is composed of multiple SerializedTraceType objects.
type MyCompositeRepresentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []*SerializedTraceType `protobuf:"bytes,1,rep,name=elements" json:"elements,omitempty"`
}

func (x *MyCompositeRepresentation) Reset() {
	*x = MyCompositeRepresentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_function_trace_type_serialization_test_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyCompositeRepresentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyCompositeRepresentation) ProtoMessage() {}

func (x *MyCompositeRepresentation) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_function_trace_type_serialization_test_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyCompositeRepresentation.ProtoReflect.Descriptor instead.
func (*MyCompositeRepresentation) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_function_trace_type_serialization_test_proto_rawDescGZIP(), []int{1}
}

func (x *MyCompositeRepresentation) GetElements() []*SerializedTraceType {
	if x != nil {
		return x.Elements
	}
	return nil
}

type MyMultiClassRepresentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (x *MyMultiClassRepresentation) Reset() {
	*x = MyMultiClassRepresentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_function_trace_type_serialization_test_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyMultiClassRepresentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyMultiClassRepresentation) ProtoMessage() {}

func (x *MyMultiClassRepresentation) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_function_trace_type_serialization_test_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyMultiClassRepresentation.ProtoReflect.Descriptor instead.
func (*MyMultiClassRepresentation) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_function_trace_type_serialization_test_proto_rawDescGZIP(), []int{2}
}

func (x *MyMultiClassRepresentation) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

var File_tensorflow_core_function_trace_type_serialization_test_proto protoreflect.FileDescriptor

var file_tensorflow_core_function_trace_type_serialization_test_proto_rawDesc = []byte{
	0x0a, 0x3c, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x42, 0x0a, 0x16, 0x4d, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x19, 0x4d, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x62, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x46, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x2c, 0x0a, 0x1a, 0x4d, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x42, 0x92, 0x03, 0x0a, 0x3a, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x73,
	0x74, 0x42, 0x16, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a, 0x42, 0x67,
	0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x63, 0x69, 0x69, 0x70, 0x2d, 0x69,
	0x63, 0x70, 0x2f, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0xa2, 0x02, 0x05, 0x54, 0x43, 0x46, 0x54, 0x53, 0xaa, 0x02, 0x34, 0x54, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74,
	0xca, 0x02, 0x35, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x43, 0x6f,
	0x72, 0x65, 0x5c, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x5c, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5c, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0xe2, 0x02, 0x41, 0x54, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x5c, 0x54, 0x72, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5c, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x38, 0x54,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x3a, 0x3a, 0x43, 0x6f, 0x72, 0x65, 0x3a,
	0x3a, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74,
}

var (
	file_tensorflow_core_function_trace_type_serialization_test_proto_rawDescOnce sync.Once
	file_tensorflow_core_function_trace_type_serialization_test_proto_rawDescData = file_tensorflow_core_function_trace_type_serialization_test_proto_rawDesc
)

func file_tensorflow_core_function_trace_type_serialization_test_proto_rawDescGZIP() []byte {
	file_tensorflow_core_function_trace_type_serialization_test_proto_rawDescOnce.Do(func() {
		file_tensorflow_core_function_trace_type_serialization_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_core_function_trace_type_serialization_test_proto_rawDescData)
	})
	return file_tensorflow_core_function_trace_type_serialization_test_proto_rawDescData
}

var file_tensorflow_core_function_trace_type_serialization_test_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tensorflow_core_function_trace_type_serialization_test_proto_goTypes = []interface{}{
	(*MyCustomRepresentation)(nil),     // 0: tensorflow.core.function.trace_type.serialization_test.MyCustomRepresentation
	(*MyCompositeRepresentation)(nil),  // 1: tensorflow.core.function.trace_type.serialization_test.MyCompositeRepresentation
	(*MyMultiClassRepresentation)(nil), // 2: tensorflow.core.function.trace_type.serialization_test.MyMultiClassRepresentation
	(*SerializedTraceType)(nil),        // 3: tensorflow.core.function.trace_type.serialization.SerializedTraceType
}
var file_tensorflow_core_function_trace_type_serialization_test_proto_depIdxs = []int32{
	3, // 0: tensorflow.core.function.trace_type.serialization_test.MyCompositeRepresentation.elements:type_name -> tensorflow.core.function.trace_type.serialization.SerializedTraceType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_tensorflow_core_function_trace_type_serialization_test_proto_init() }
func file_tensorflow_core_function_trace_type_serialization_test_proto_init() {
	if File_tensorflow_core_function_trace_type_serialization_test_proto != nil {
		return
	}
	file_tensorflow_core_function_trace_type_serialization_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_core_function_trace_type_serialization_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyCustomRepresentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_function_trace_type_serialization_test_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyCompositeRepresentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_function_trace_type_serialization_test_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyMultiClassRepresentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_core_function_trace_type_serialization_test_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_core_function_trace_type_serialization_test_proto_goTypes,
		DependencyIndexes: file_tensorflow_core_function_trace_type_serialization_test_proto_depIdxs,
		MessageInfos:      file_tensorflow_core_function_trace_type_serialization_test_proto_msgTypes,
	}.Build()
	File_tensorflow_core_function_trace_type_serialization_test_proto = out.File
	file_tensorflow_core_function_trace_type_serialization_test_proto_rawDesc = nil
	file_tensorflow_core_function_trace_type_serialization_test_proto_goTypes = nil
	file_tensorflow_core_function_trace_type_serialization_test_proto_depIdxs = nil
}
