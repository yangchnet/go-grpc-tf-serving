// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tensorflow/core/protobuf/tpu/topology.proto

package tpu

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Embedding feature of a tpu.
type TPUHardwareFeature_EmbeddingFeature int32

const (
	// No embedding lookup accelerator available on the tpu.
	TPUHardwareFeature_UNSUPPORTED TPUHardwareFeature_EmbeddingFeature = 0
	// Embedding lookup accelerator V1. The embedding lookup operation can only
	// be placed at the beginning of computation. Only one instance of embedding
	// lookup layer is allowed.
	TPUHardwareFeature_V1 TPUHardwareFeature_EmbeddingFeature = 1
	// Embedding lookup accelerator V2. The embedding lookup operation can be
	// placed anywhere of the computation. Multiple instances of embedding
	// lookup layer is allowed.
	TPUHardwareFeature_V2 TPUHardwareFeature_EmbeddingFeature = 2
)

// Enum value maps for TPUHardwareFeature_EmbeddingFeature.
var (
	TPUHardwareFeature_EmbeddingFeature_name = map[int32]string{
		0: "UNSUPPORTED",
		1: "V1",
		2: "V2",
	}
	TPUHardwareFeature_EmbeddingFeature_value = map[string]int32{
		"UNSUPPORTED": 0,
		"V1":          1,
		"V2":          2,
	}
)

func (x TPUHardwareFeature_EmbeddingFeature) Enum() *TPUHardwareFeature_EmbeddingFeature {
	p := new(TPUHardwareFeature_EmbeddingFeature)
	*p = x
	return p
}

func (x TPUHardwareFeature_EmbeddingFeature) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TPUHardwareFeature_EmbeddingFeature) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_core_protobuf_tpu_topology_proto_enumTypes[0].Descriptor()
}

func (TPUHardwareFeature_EmbeddingFeature) Type() protoreflect.EnumType {
	return &file_tensorflow_core_protobuf_tpu_topology_proto_enumTypes[0]
}

func (x TPUHardwareFeature_EmbeddingFeature) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TPUHardwareFeature_EmbeddingFeature.Descriptor instead.
func (TPUHardwareFeature_EmbeddingFeature) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_tpu_topology_proto_rawDescGZIP(), []int{0, 0}
}

// Describes features of a tpu.
type TPUHardwareFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmbeddingFeature TPUHardwareFeature_EmbeddingFeature `protobuf:"varint,1,opt,name=embedding_feature,json=embeddingFeature,proto3,enum=tensorflow.tpu.TPUHardwareFeature_EmbeddingFeature" json:"embedding_feature,omitempty"`
}

func (x *TPUHardwareFeature) Reset() {
	*x = TPUHardwareFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_tpu_topology_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPUHardwareFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPUHardwareFeature) ProtoMessage() {}

func (x *TPUHardwareFeature) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_tpu_topology_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPUHardwareFeature.ProtoReflect.Descriptor instead.
func (*TPUHardwareFeature) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_tpu_topology_proto_rawDescGZIP(), []int{0}
}

func (x *TPUHardwareFeature) GetEmbeddingFeature() TPUHardwareFeature_EmbeddingFeature {
	if x != nil {
		return x.EmbeddingFeature
	}
	return TPUHardwareFeature_UNSUPPORTED
}

// Describes the geometry of a TPU mesh.
type TopologyProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The dimensions of the TPU topology, in cores. Typically, this is a 4D
	// topology [x, y, z, core], where the major dimensions correspond to TPU
	// chips, and the minor dimension describes the number of cores on a multicore
	// chip.
	MeshShape []int32 `protobuf:"varint,1,rep,packed,name=mesh_shape,json=meshShape,proto3" json:"mesh_shape,omitempty"`
	// Number of TensorFlow tasks in the cluster.
	NumTasks int32 `protobuf:"varint,2,opt,name=num_tasks,json=numTasks,proto3" json:"num_tasks,omitempty"`
	// Number of TPU devices per task.
	NumTpuDevicesPerTask int32 `protobuf:"varint,3,opt,name=num_tpu_devices_per_task,json=numTpuDevicesPerTask,proto3" json:"num_tpu_devices_per_task,omitempty"`
	// A flattened rank 3 int32 array with shape
	// [num_tasks, num_tpu_devices_per_task, len(mesh_shape)].
	// `tasks` is the number of tasks in the TPU cluster, `devices` is the number
	// of TPU devices per task, and the minor dimension corresponds to a position
	// in the TPU mesh topology. Each entry [task, device, axis] gives the
	// `axis`-th coordinate in the topology of a task/device pair.
	DeviceCoordinates []int32 `protobuf:"varint,4,rep,packed,name=device_coordinates,json=deviceCoordinates,proto3" json:"device_coordinates,omitempty"`
	// TPU supported features.
	TpuHardwareFeature *TPUHardwareFeature `protobuf:"bytes,5,opt,name=tpu_hardware_feature,json=tpuHardwareFeature,proto3" json:"tpu_hardware_feature,omitempty"`
}

func (x *TopologyProto) Reset() {
	*x = TopologyProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_tpu_topology_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyProto) ProtoMessage() {}

func (x *TopologyProto) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_tpu_topology_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyProto.ProtoReflect.Descriptor instead.
func (*TopologyProto) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_tpu_topology_proto_rawDescGZIP(), []int{1}
}

func (x *TopologyProto) GetMeshShape() []int32 {
	if x != nil {
		return x.MeshShape
	}
	return nil
}

func (x *TopologyProto) GetNumTasks() int32 {
	if x != nil {
		return x.NumTasks
	}
	return 0
}

func (x *TopologyProto) GetNumTpuDevicesPerTask() int32 {
	if x != nil {
		return x.NumTpuDevicesPerTask
	}
	return 0
}

func (x *TopologyProto) GetDeviceCoordinates() []int32 {
	if x != nil {
		return x.DeviceCoordinates
	}
	return nil
}

func (x *TopologyProto) GetTpuHardwareFeature() *TPUHardwareFeature {
	if x != nil {
		return x.TpuHardwareFeature
	}
	return nil
}

var File_tensorflow_core_protobuf_tpu_topology_proto protoreflect.FileDescriptor

var file_tensorflow_core_protobuf_tpu_topology_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x70, 0x75, 0x2f, 0x74,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x70, 0x75, 0x22, 0xab, 0x01,
	0x0a, 0x12, 0x54, 0x50, 0x55, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x60, 0x0a, 0x11, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x33, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x70, 0x75,
	0x2e, 0x54, 0x50, 0x55, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x10, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x33, 0x0a, 0x10, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e,
	0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x56,
	0x31, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x56, 0x32, 0x10, 0x02, 0x22, 0x88, 0x02, 0x0a, 0x0d,
	0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x65, 0x73, 0x68, 0x5f, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x68, 0x53, 0x68, 0x61, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6e, 0x75, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x36, 0x0a, 0x18, 0x6e, 0x75, 0x6d,
	0x5f, 0x74, 0x70, 0x75, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6e, 0x75, 0x6d,
	0x54, 0x70, 0x75, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x11, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x54, 0x0a, 0x14, 0x74, 0x70, 0x75, 0x5f, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x70, 0x75, 0x2e,
	0x54, 0x50, 0x55, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x12, 0x74, 0x70, 0x75, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0xbe, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x70, 0x75, 0x42, 0x0d, 0x54,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01,
	0x5a, 0x3b, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x63, 0x69, 0x69,
	0x70, 0x2d, 0x69, 0x63, 0x70, 0x2f, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x70, 0x75, 0xf8, 0x01, 0x01,
	0xa2, 0x02, 0x03, 0x54, 0x54, 0x58, 0xaa, 0x02, 0x0e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x54, 0x70, 0x75, 0xca, 0x02, 0x0e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x54, 0x70, 0x75, 0xe2, 0x02, 0x1a, 0x54, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x54, 0x70, 0x75, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x3a, 0x3a, 0x54, 0x70, 0x75, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_core_protobuf_tpu_topology_proto_rawDescOnce sync.Once
	file_tensorflow_core_protobuf_tpu_topology_proto_rawDescData = file_tensorflow_core_protobuf_tpu_topology_proto_rawDesc
)

func file_tensorflow_core_protobuf_tpu_topology_proto_rawDescGZIP() []byte {
	file_tensorflow_core_protobuf_tpu_topology_proto_rawDescOnce.Do(func() {
		file_tensorflow_core_protobuf_tpu_topology_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_core_protobuf_tpu_topology_proto_rawDescData)
	})
	return file_tensorflow_core_protobuf_tpu_topology_proto_rawDescData
}

var file_tensorflow_core_protobuf_tpu_topology_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tensorflow_core_protobuf_tpu_topology_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tensorflow_core_protobuf_tpu_topology_proto_goTypes = []interface{}{
	(TPUHardwareFeature_EmbeddingFeature)(0), // 0: tensorflow.tpu.TPUHardwareFeature.EmbeddingFeature
	(*TPUHardwareFeature)(nil),               // 1: tensorflow.tpu.TPUHardwareFeature
	(*TopologyProto)(nil),                    // 2: tensorflow.tpu.TopologyProto
}
var file_tensorflow_core_protobuf_tpu_topology_proto_depIdxs = []int32{
	0, // 0: tensorflow.tpu.TPUHardwareFeature.embedding_feature:type_name -> tensorflow.tpu.TPUHardwareFeature.EmbeddingFeature
	1, // 1: tensorflow.tpu.TopologyProto.tpu_hardware_feature:type_name -> tensorflow.tpu.TPUHardwareFeature
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_tensorflow_core_protobuf_tpu_topology_proto_init() }
func file_tensorflow_core_protobuf_tpu_topology_proto_init() {
	if File_tensorflow_core_protobuf_tpu_topology_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_core_protobuf_tpu_topology_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPUHardwareFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_tpu_topology_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_core_protobuf_tpu_topology_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_core_protobuf_tpu_topology_proto_goTypes,
		DependencyIndexes: file_tensorflow_core_protobuf_tpu_topology_proto_depIdxs,
		EnumInfos:         file_tensorflow_core_protobuf_tpu_topology_proto_enumTypes,
		MessageInfos:      file_tensorflow_core_protobuf_tpu_topology_proto_msgTypes,
	}.Build()
	File_tensorflow_core_protobuf_tpu_topology_proto = out.File
	file_tensorflow_core_protobuf_tpu_topology_proto_rawDesc = nil
	file_tensorflow_core_protobuf_tpu_topology_proto_goTypes = nil
	file_tensorflow_core_protobuf_tpu_topology_proto_depIdxs = nil
}
