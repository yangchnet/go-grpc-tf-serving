// Copyright 2021 The TensorFlow Authors. All Rights Reserved.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//==============================================================================

// Protocol messages for describing autotuning maps. This enables us to easily
// serialize/deserialize existing autotune maps in the TF runtime.
//
// For Google-internal use only.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tensorflow/core/util/autotune_maps/autotune_map.proto

package autotune_maps

import (
	_ "github.com/yangchnet/tf-serving/tensorflow/compiler/xla/stream_executor"
	protobuf "github.com/yangchnet/tf-serving/tensorflow/tsl/protobuf"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConvMapProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KvPairs []*ConvMapProto_Entry `protobuf:"bytes,1,rep,name=kv_pairs,json=kvPairs,proto3" json:"kv_pairs,omitempty"`
}

func (x *ConvMapProto) Reset() {
	*x = ConvMapProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_util_autotune_maps_autotune_map_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConvMapProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvMapProto) ProtoMessage() {}

func (x *ConvMapProto) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_util_autotune_maps_autotune_map_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvMapProto.ProtoReflect.Descriptor instead.
func (*ConvMapProto) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_util_autotune_maps_autotune_map_proto_rawDescGZIP(), []int{0}
}

func (x *ConvMapProto) GetKvPairs() []*ConvMapProto_Entry {
	if x != nil {
		return x.KvPairs
	}
	return nil
}

// TODO(b/189530096): Support autotune maps for more ops.
type AutotuneMapsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvMap      *ConvMapProto `protobuf:"bytes,2,opt,name=conv_map,json=convMap,proto3" json:"conv_map,omitempty"`
	FusedConvMap *ConvMapProto `protobuf:"bytes,3,opt,name=fused_conv_map,json=fusedConvMap,proto3" json:"fused_conv_map,omitempty"`
}

func (x *AutotuneMapsProto) Reset() {
	*x = AutotuneMapsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_util_autotune_maps_autotune_map_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutotuneMapsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutotuneMapsProto) ProtoMessage() {}

func (x *AutotuneMapsProto) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_util_autotune_maps_autotune_map_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutotuneMapsProto.ProtoReflect.Descriptor instead.
func (*AutotuneMapsProto) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_util_autotune_maps_autotune_map_proto_rawDescGZIP(), []int{1}
}

func (x *AutotuneMapsProto) GetConvMap() *ConvMapProto {
	if x != nil {
		return x.ConvMap
	}
	return nil
}

func (x *AutotuneMapsProto) GetFusedConvMap() *ConvMapProto {
	if x != nil {
		return x.FusedConvMap
	}
	return nil
}

type ConvMapProto_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *ConvParametersProto           `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *protobuf.AlgorithmConfigProto `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ConvMapProto_Entry) Reset() {
	*x = ConvMapProto_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_util_autotune_maps_autotune_map_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConvMapProto_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvMapProto_Entry) ProtoMessage() {}

func (x *ConvMapProto_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_util_autotune_maps_autotune_map_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvMapProto_Entry.ProtoReflect.Descriptor instead.
func (*ConvMapProto_Entry) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_util_autotune_maps_autotune_map_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ConvMapProto_Entry) GetKey() *ConvParametersProto {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ConvMapProto_Entry) GetValue() *protobuf.AlgorithmConfigProto {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_tensorflow_core_util_autotune_maps_autotune_map_proto protoreflect.FileDescriptor

var file_tensorflow_core_util_autotune_maps_autotune_map_proto_rawDesc = []byte{
	0x0a, 0x35, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x74, 0x75, 0x6e, 0x65, 0x5f,
	0x6d, 0x61, 0x70, 0x73, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x74, 0x75, 0x6e, 0x65, 0x5f, 0x6d, 0x61,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x1a, 0x31, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x78, 0x6c, 0x61, 0x2f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2f, 0x64, 0x6e, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x61, 0x75, 0x74,
	0x6f, 0x74, 0x75, 0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x76, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xc6, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x76, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x39, 0x0a, 0x08, 0x6b, 0x76, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x6b, 0x76, 0x50, 0x61, 0x69, 0x72, 0x73, 0x1a, 0x7b, 0x0a, 0x05,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x43, 0x6f, 0x6e, 0x76, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x6e, 0x6e, 0x2e, 0x41, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x11, 0x41, 0x75,
	0x74, 0x6f, 0x74, 0x75, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x33, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x76, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43,
	0x6f, 0x6e, 0x76, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x76, 0x4d, 0x61, 0x70, 0x12, 0x3e, 0x0a, 0x0e, 0x66, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x63, 0x6f,
	0x6e, 0x76, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x4d, 0x61,
	0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x66, 0x75, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x76, 0x4d, 0x61, 0x70, 0x42, 0xaf, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x42, 0x10, 0x41, 0x75, 0x74, 0x6f, 0x74, 0x75, 0x6e,
	0x65, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a, 0x41, 0x67,
	0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x63, 0x69, 0x69, 0x70, 0x2d, 0x69,
	0x63, 0x70, 0x2f, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x75, 0x74,
	0x69, 0x6c, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x74, 0x75, 0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x73,
	0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0xca, 0x02, 0x0a, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77,
	0xe2, 0x02, 0x16, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x54, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_core_util_autotune_maps_autotune_map_proto_rawDescOnce sync.Once
	file_tensorflow_core_util_autotune_maps_autotune_map_proto_rawDescData = file_tensorflow_core_util_autotune_maps_autotune_map_proto_rawDesc
)

func file_tensorflow_core_util_autotune_maps_autotune_map_proto_rawDescGZIP() []byte {
	file_tensorflow_core_util_autotune_maps_autotune_map_proto_rawDescOnce.Do(func() {
		file_tensorflow_core_util_autotune_maps_autotune_map_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_core_util_autotune_maps_autotune_map_proto_rawDescData)
	})
	return file_tensorflow_core_util_autotune_maps_autotune_map_proto_rawDescData
}

var file_tensorflow_core_util_autotune_maps_autotune_map_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tensorflow_core_util_autotune_maps_autotune_map_proto_goTypes = []interface{}{
	(*ConvMapProto)(nil),                  // 0: tensorflow.ConvMapProto
	(*AutotuneMapsProto)(nil),             // 1: tensorflow.AutotuneMapsProto
	(*ConvMapProto_Entry)(nil),            // 2: tensorflow.ConvMapProto.Entry
	(*ConvParametersProto)(nil),           // 3: tensorflow.ConvParametersProto
	(*protobuf.AlgorithmConfigProto)(nil), // 4: stream_executor.dnn.AlgorithmConfigProto
}
var file_tensorflow_core_util_autotune_maps_autotune_map_proto_depIdxs = []int32{
	2, // 0: tensorflow.ConvMapProto.kv_pairs:type_name -> tensorflow.ConvMapProto.Entry
	0, // 1: tensorflow.AutotuneMapsProto.conv_map:type_name -> tensorflow.ConvMapProto
	0, // 2: tensorflow.AutotuneMapsProto.fused_conv_map:type_name -> tensorflow.ConvMapProto
	3, // 3: tensorflow.ConvMapProto.Entry.key:type_name -> tensorflow.ConvParametersProto
	4, // 4: tensorflow.ConvMapProto.Entry.value:type_name -> stream_executor.dnn.AlgorithmConfigProto
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_tensorflow_core_util_autotune_maps_autotune_map_proto_init() }
func file_tensorflow_core_util_autotune_maps_autotune_map_proto_init() {
	if File_tensorflow_core_util_autotune_maps_autotune_map_proto != nil {
		return
	}
	file_tensorflow_core_util_autotune_maps_conv_parameters_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_core_util_autotune_maps_autotune_map_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConvMapProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_util_autotune_maps_autotune_map_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutotuneMapsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_util_autotune_maps_autotune_map_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConvMapProto_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_core_util_autotune_maps_autotune_map_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_core_util_autotune_maps_autotune_map_proto_goTypes,
		DependencyIndexes: file_tensorflow_core_util_autotune_maps_autotune_map_proto_depIdxs,
		MessageInfos:      file_tensorflow_core_util_autotune_maps_autotune_map_proto_msgTypes,
	}.Build()
	File_tensorflow_core_util_autotune_maps_autotune_map_proto = out.File
	file_tensorflow_core_util_autotune_maps_autotune_map_proto_rawDesc = nil
	file_tensorflow_core_util_autotune_maps_autotune_map_proto_goTypes = nil
	file_tensorflow_core_util_autotune_maps_autotune_map_proto_depIdxs = nil
}
