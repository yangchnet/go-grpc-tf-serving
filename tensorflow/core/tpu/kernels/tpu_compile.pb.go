// Copyright 2020 The TensorFlow Authors. All Rights Reserved.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//==============================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tensorflow/core/tpu/kernels/tpu_compile.proto

package kernels

import (
	framework "github.com/yangchnet/tf-serving/tensorflow/core/framework"
	tpu "github.com/yangchnet/tf-serving/tensorflow/core/protobuf/tpu"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TPU compilation request for compiling computations into XLA HLO IR and build
// TPU programs.
type TpuCompilationRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A flag reserved for using experimental version of the compilation. By
	// default the value should be false.
	UseExperimental bool `protobuf:"varint,1,opt,name=use_experimental,json=useExperimental,proto3" json:"use_experimental,omitempty"`
	// Use mlir to lower computation(s) to Hlo.
	UseMlir bool `protobuf:"varint,2,opt,name=use_mlir,json=useMlir,proto3" json:"use_mlir,omitempty"`
	// If true, returns hlo metadatas.
	ReturnHloProtos bool `protobuf:"varint,3,opt,name=return_hlo_protos,json=returnHloProtos,proto3" json:"return_hlo_protos,omitempty"`
	// If true, unloads cache on session close.
	UnloadCacheOnSessionClose bool `protobuf:"varint,4,opt,name=unload_cache_on_session_close,json=unloadCacheOnSessionClose,proto3" json:"unload_cache_on_session_close,omitempty"`
	// Compilation metadata.
	Metadata *tpu.TPUCompileMetadataProto `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Computation argument shapes.
	ArgShapes []*framework.TensorShapeProto `protobuf:"bytes,6,rep,name=arg_shapes,json=argShapes,proto3" json:"arg_shapes,omitempty"`
	// Input tensor that gives const guarantee to the TF runtime.
	GuaranteedConstants []*framework.TensorProto `protobuf:"bytes,7,rep,name=guaranteed_constants,json=guaranteedConstants,proto3" json:"guaranteed_constants,omitempty"`
	// MLIR module definition.
	MlirModule string `protobuf:"bytes,8,opt,name=mlir_module,json=mlirModule,proto3" json:"mlir_module,omitempty"`
	// A set of named functions used as the input to lowering to Hlo when mlir is
	// not used.
	FdefLib *framework.FunctionDefLibrary `protobuf:"bytes,9,opt,name=fdef_lib,json=fdefLib,proto3" json:"fdef_lib,omitempty"`
	// The version of the graph definition used to lower TF function to Hlo.
	GraphDefVersion int32 `protobuf:"varint,10,opt,name=graph_def_version,json=graphDefVersion,proto3" json:"graph_def_version,omitempty"`
	// Function containing the computation to compile.
	Function *framework.NameAttrList `protobuf:"bytes,11,opt,name=function,proto3" json:"function,omitempty"`
}

func (x *TpuCompilationRequestProto) Reset() {
	*x = TpuCompilationRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_tpu_kernels_tpu_compile_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TpuCompilationRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TpuCompilationRequestProto) ProtoMessage() {}

func (x *TpuCompilationRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_tpu_kernels_tpu_compile_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TpuCompilationRequestProto.ProtoReflect.Descriptor instead.
func (*TpuCompilationRequestProto) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_tpu_kernels_tpu_compile_proto_rawDescGZIP(), []int{0}
}

func (x *TpuCompilationRequestProto) GetUseExperimental() bool {
	if x != nil {
		return x.UseExperimental
	}
	return false
}

func (x *TpuCompilationRequestProto) GetUseMlir() bool {
	if x != nil {
		return x.UseMlir
	}
	return false
}

func (x *TpuCompilationRequestProto) GetReturnHloProtos() bool {
	if x != nil {
		return x.ReturnHloProtos
	}
	return false
}

func (x *TpuCompilationRequestProto) GetUnloadCacheOnSessionClose() bool {
	if x != nil {
		return x.UnloadCacheOnSessionClose
	}
	return false
}

func (x *TpuCompilationRequestProto) GetMetadata() *tpu.TPUCompileMetadataProto {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TpuCompilationRequestProto) GetArgShapes() []*framework.TensorShapeProto {
	if x != nil {
		return x.ArgShapes
	}
	return nil
}

func (x *TpuCompilationRequestProto) GetGuaranteedConstants() []*framework.TensorProto {
	if x != nil {
		return x.GuaranteedConstants
	}
	return nil
}

func (x *TpuCompilationRequestProto) GetMlirModule() string {
	if x != nil {
		return x.MlirModule
	}
	return ""
}

func (x *TpuCompilationRequestProto) GetFdefLib() *framework.FunctionDefLibrary {
	if x != nil {
		return x.FdefLib
	}
	return nil
}

func (x *TpuCompilationRequestProto) GetGraphDefVersion() int32 {
	if x != nil {
		return x.GraphDefVersion
	}
	return 0
}

func (x *TpuCompilationRequestProto) GetFunction() *framework.NameAttrList {
	if x != nil {
		return x.Function
	}
	return nil
}

var File_tensorflow_core_tpu_kernels_tpu_compile_proto protoreflect.FileDescriptor

var file_tensorflow_core_tpu_kernels_tpu_compile_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x74, 0x70, 0x75, 0x2f, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x73, 0x2f, 0x74, 0x70,
	0x75, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x70, 0x75, 0x1a,
	0x2a, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f,
	0x73, 0x68, 0x61, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x70, 0x75, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c,
	0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xdc, 0x04, 0x0a, 0x1a, 0x54, 0x70, 0x75, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x29, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x45, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x5f, 0x6d, 0x6c, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x4d, 0x6c, 0x69, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x68, 0x6c, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x48, 0x6c, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x12, 0x40, 0x0a, 0x1d, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x4f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x74, 0x70, 0x75, 0x2e, 0x54, 0x50, 0x55, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x72, 0x67, 0x5f,
	0x73, 0x68, 0x61, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09, 0x61, 0x72, 0x67, 0x53,
	0x68, 0x61, 0x70, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x14, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74,
	0x65, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x13, 0x67, 0x75,
	0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6c, 0x69, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6c, 0x69, 0x72, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x66, 0x64, 0x65, 0x66, 0x5f, 0x6c, 0x69, 0x62, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x52, 0x07, 0x66, 0x64, 0x65, 0x66, 0x4c, 0x69, 0x62, 0x12, 0x2a, 0x0a,
	0x11, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x44,
	0x65, 0x66, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0xbc, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x74, 0x70, 0x75, 0x42, 0x0f, 0x54, 0x70, 0x75, 0x43, 0x6f, 0x6d, 0x70, 0x69,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74,
	0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x63, 0x69, 0x69, 0x70, 0x2d, 0x69, 0x63, 0x70,
	0x2f, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x70, 0x75, 0x2f,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x73, 0xa2, 0x02, 0x03, 0x54, 0x54, 0x58, 0xaa, 0x02, 0x0e,
	0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x54, 0x70, 0x75, 0xca, 0x02,
	0x0e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x54, 0x70, 0x75, 0xe2,
	0x02, 0x1a, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x54, 0x70, 0x75,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x54,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x3a, 0x3a, 0x54, 0x70, 0x75, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_core_tpu_kernels_tpu_compile_proto_rawDescOnce sync.Once
	file_tensorflow_core_tpu_kernels_tpu_compile_proto_rawDescData = file_tensorflow_core_tpu_kernels_tpu_compile_proto_rawDesc
)

func file_tensorflow_core_tpu_kernels_tpu_compile_proto_rawDescGZIP() []byte {
	file_tensorflow_core_tpu_kernels_tpu_compile_proto_rawDescOnce.Do(func() {
		file_tensorflow_core_tpu_kernels_tpu_compile_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_core_tpu_kernels_tpu_compile_proto_rawDescData)
	})
	return file_tensorflow_core_tpu_kernels_tpu_compile_proto_rawDescData
}

var file_tensorflow_core_tpu_kernels_tpu_compile_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_tensorflow_core_tpu_kernels_tpu_compile_proto_goTypes = []interface{}{
	(*TpuCompilationRequestProto)(nil),   // 0: tensorflow.tpu.TpuCompilationRequestProto
	(*tpu.TPUCompileMetadataProto)(nil),  // 1: tensorflow.tpu.TPUCompileMetadataProto
	(*framework.TensorShapeProto)(nil),   // 2: tensorflow.TensorShapeProto
	(*framework.TensorProto)(nil),        // 3: tensorflow.TensorProto
	(*framework.FunctionDefLibrary)(nil), // 4: tensorflow.FunctionDefLibrary
	(*framework.NameAttrList)(nil),       // 5: tensorflow.NameAttrList
}
var file_tensorflow_core_tpu_kernels_tpu_compile_proto_depIdxs = []int32{
	1, // 0: tensorflow.tpu.TpuCompilationRequestProto.metadata:type_name -> tensorflow.tpu.TPUCompileMetadataProto
	2, // 1: tensorflow.tpu.TpuCompilationRequestProto.arg_shapes:type_name -> tensorflow.TensorShapeProto
	3, // 2: tensorflow.tpu.TpuCompilationRequestProto.guaranteed_constants:type_name -> tensorflow.TensorProto
	4, // 3: tensorflow.tpu.TpuCompilationRequestProto.fdef_lib:type_name -> tensorflow.FunctionDefLibrary
	5, // 4: tensorflow.tpu.TpuCompilationRequestProto.function:type_name -> tensorflow.NameAttrList
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_tensorflow_core_tpu_kernels_tpu_compile_proto_init() }
func file_tensorflow_core_tpu_kernels_tpu_compile_proto_init() {
	if File_tensorflow_core_tpu_kernels_tpu_compile_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_core_tpu_kernels_tpu_compile_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TpuCompilationRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_core_tpu_kernels_tpu_compile_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_core_tpu_kernels_tpu_compile_proto_goTypes,
		DependencyIndexes: file_tensorflow_core_tpu_kernels_tpu_compile_proto_depIdxs,
		MessageInfos:      file_tensorflow_core_tpu_kernels_tpu_compile_proto_msgTypes,
	}.Build()
	File_tensorflow_core_tpu_kernels_tpu_compile_proto = out.File
	file_tensorflow_core_tpu_kernels_tpu_compile_proto_rawDesc = nil
	file_tensorflow_core_tpu_kernels_tpu_compile_proto_goTypes = nil
	file_tensorflow_core_tpu_kernels_tpu_compile_proto_depIdxs = nil
}
