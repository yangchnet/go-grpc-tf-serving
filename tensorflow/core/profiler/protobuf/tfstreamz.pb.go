// This proto describes the format of the output profile file from
// the TF-stats tool.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tensorflow/core/profiler/protobuf/tfstreamz.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UnitOfMeasure int32

const (
	UnitOfMeasure_NUMBER UnitOfMeasure = 0
	UnitOfMeasure_TIME   UnitOfMeasure = 1
	UnitOfMeasure_BYTES  UnitOfMeasure = 2
)

// Enum value maps for UnitOfMeasure.
var (
	UnitOfMeasure_name = map[int32]string{
		0: "NUMBER",
		1: "TIME",
		2: "BYTES",
	}
	UnitOfMeasure_value = map[string]int32{
		"NUMBER": 0,
		"TIME":   1,
		"BYTES":  2,
	}
)

func (x UnitOfMeasure) Enum() *UnitOfMeasure {
	p := new(UnitOfMeasure)
	*p = x
	return p
}

func (x UnitOfMeasure) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnitOfMeasure) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_core_profiler_protobuf_tfstreamz_proto_enumTypes[0].Descriptor()
}

func (UnitOfMeasure) Type() protoreflect.EnumType {
	return &file_tensorflow_core_profiler_protobuf_tfstreamz_proto_enumTypes[0]
}

func (x UnitOfMeasure) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnitOfMeasure.Descriptor instead.
func (UnitOfMeasure) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_core_profiler_protobuf_tfstreamz_proto_rawDescGZIP(), []int{0}
}

type PercentilePoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// In the [0, 100] range.
	Percentile float64 `protobuf:"fixed64,1,opt,name=percentile,proto3" json:"percentile,omitempty"`
	Value      float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PercentilePoint) Reset() {
	*x = PercentilePoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_profiler_protobuf_tfstreamz_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PercentilePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PercentilePoint) ProtoMessage() {}

func (x *PercentilePoint) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_profiler_protobuf_tfstreamz_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PercentilePoint.ProtoReflect.Descriptor instead.
func (*PercentilePoint) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_profiler_protobuf_tfstreamz_proto_rawDescGZIP(), []int{0}
}

func (x *PercentilePoint) GetPercentile() float64 {
	if x != nil {
		return x.Percentile
	}
	return 0
}

func (x *PercentilePoint) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Percentiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitOfMeasure UnitOfMeasure      `protobuf:"varint,1,opt,name=unit_of_measure,json=unitOfMeasure,proto3,enum=tensorflow.profiler.tfstreamz.UnitOfMeasure" json:"unit_of_measure,omitempty"`
	StartNstime   uint64             `protobuf:"varint,2,opt,name=start_nstime,json=startNstime,proto3" json:"start_nstime,omitempty"`
	EndNstime     uint64             `protobuf:"varint,3,opt,name=end_nstime,json=endNstime,proto3" json:"end_nstime,omitempty"`
	MinValue      float64            `protobuf:"fixed64,4,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	MaxValue      float64            `protobuf:"fixed64,5,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	Mean          float64            `protobuf:"fixed64,6,opt,name=mean,proto3" json:"mean,omitempty"`
	Stddev        float64            `protobuf:"fixed64,7,opt,name=stddev,proto3" json:"stddev,omitempty"`
	NumSamples    uint64             `protobuf:"varint,8,opt,name=num_samples,json=numSamples,proto3" json:"num_samples,omitempty"`
	TotalSamples  uint64             `protobuf:"varint,9,opt,name=total_samples,json=totalSamples,proto3" json:"total_samples,omitempty"`
	Accumulator   float64            `protobuf:"fixed64,10,opt,name=accumulator,proto3" json:"accumulator,omitempty"`
	Points        []*PercentilePoint `protobuf:"bytes,11,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *Percentiles) Reset() {
	*x = Percentiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_profiler_protobuf_tfstreamz_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Percentiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Percentiles) ProtoMessage() {}

func (x *Percentiles) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_profiler_protobuf_tfstreamz_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Percentiles.ProtoReflect.Descriptor instead.
func (*Percentiles) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_profiler_protobuf_tfstreamz_proto_rawDescGZIP(), []int{1}
}

func (x *Percentiles) GetUnitOfMeasure() UnitOfMeasure {
	if x != nil {
		return x.UnitOfMeasure
	}
	return UnitOfMeasure_NUMBER
}

func (x *Percentiles) GetStartNstime() uint64 {
	if x != nil {
		return x.StartNstime
	}
	return 0
}

func (x *Percentiles) GetEndNstime() uint64 {
	if x != nil {
		return x.EndNstime
	}
	return 0
}

func (x *Percentiles) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *Percentiles) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *Percentiles) GetMean() float64 {
	if x != nil {
		return x.Mean
	}
	return 0
}

func (x *Percentiles) GetStddev() float64 {
	if x != nil {
		return x.Stddev
	}
	return 0
}

func (x *Percentiles) GetNumSamples() uint64 {
	if x != nil {
		return x.NumSamples
	}
	return 0
}

func (x *Percentiles) GetTotalSamples() uint64 {
	if x != nil {
		return x.TotalSamples
	}
	return 0
}

func (x *Percentiles) GetAccumulator() float64 {
	if x != nil {
		return x.Accumulator
	}
	return 0
}

func (x *Percentiles) GetPoints() []*PercentilePoint {
	if x != nil {
		return x.Points
	}
	return nil
}

var File_tensorflow_core_profiler_protobuf_tfstreamz_proto protoreflect.FileDescriptor

var file_tensorflow_core_profiler_protobuf_tfstreamz_proto_rawDesc = []byte{
	0x0a, 0x31, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x66, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x7a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2e, 0x74, 0x66, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x7a, 0x22, 0x47, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbb, 0x03, 0x0a, 0x0b,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x0f, 0x75,
	0x6e, 0x69, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2e, 0x74, 0x66, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x7a, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x52, 0x0d, 0x75, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x73, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x73,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x73, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x4e, 0x73, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x65, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x61,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x64, 0x65, 0x76, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x73, 0x74, 0x64, 0x64, 0x65, 0x76, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d,
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x6e, 0x75, 0x6d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x46, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2e, 0x74, 0x66, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x7a, 0x2e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2a, 0x30, 0x0a, 0x0d, 0x55, 0x6e, 0x69,
	0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x55,
	0x4d, 0x42, 0x45, 0x52, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x02, 0x42, 0x8d, 0x02, 0x0a, 0x21,
	0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2e, 0x74, 0x66, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x7a, 0x42, 0x0e, 0x54, 0x66, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x7a, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x71, 0x63, 0x69, 0x69, 0x70, 0x2d, 0x69, 0x63, 0x70, 0x2f, 0x74, 0x66, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0xa2, 0x02, 0x03, 0x54, 0x50, 0x54, 0xaa, 0x02, 0x1d,
	0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x72, 0x2e, 0x54, 0x66, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x7a, 0xca, 0x02, 0x1d,
	0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x72, 0x5c, 0x54, 0x66, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x7a, 0xe2, 0x02, 0x29,
	0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x72, 0x5c, 0x54, 0x66, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x7a, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1f, 0x54, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72,
	0x3a, 0x3a, 0x54, 0x66, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x7a, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_core_profiler_protobuf_tfstreamz_proto_rawDescOnce sync.Once
	file_tensorflow_core_profiler_protobuf_tfstreamz_proto_rawDescData = file_tensorflow_core_profiler_protobuf_tfstreamz_proto_rawDesc
)

func file_tensorflow_core_profiler_protobuf_tfstreamz_proto_rawDescGZIP() []byte {
	file_tensorflow_core_profiler_protobuf_tfstreamz_proto_rawDescOnce.Do(func() {
		file_tensorflow_core_profiler_protobuf_tfstreamz_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_core_profiler_protobuf_tfstreamz_proto_rawDescData)
	})
	return file_tensorflow_core_profiler_protobuf_tfstreamz_proto_rawDescData
}

var file_tensorflow_core_profiler_protobuf_tfstreamz_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tensorflow_core_profiler_protobuf_tfstreamz_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tensorflow_core_profiler_protobuf_tfstreamz_proto_goTypes = []interface{}{
	(UnitOfMeasure)(0),      // 0: tensorflow.profiler.tfstreamz.UnitOfMeasure
	(*PercentilePoint)(nil), // 1: tensorflow.profiler.tfstreamz.PercentilePoint
	(*Percentiles)(nil),     // 2: tensorflow.profiler.tfstreamz.Percentiles
}
var file_tensorflow_core_profiler_protobuf_tfstreamz_proto_depIdxs = []int32{
	0, // 0: tensorflow.profiler.tfstreamz.Percentiles.unit_of_measure:type_name -> tensorflow.profiler.tfstreamz.UnitOfMeasure
	1, // 1: tensorflow.profiler.tfstreamz.Percentiles.points:type_name -> tensorflow.profiler.tfstreamz.PercentilePoint
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_tensorflow_core_profiler_protobuf_tfstreamz_proto_init() }
func file_tensorflow_core_profiler_protobuf_tfstreamz_proto_init() {
	if File_tensorflow_core_profiler_protobuf_tfstreamz_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_core_profiler_protobuf_tfstreamz_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PercentilePoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_profiler_protobuf_tfstreamz_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Percentiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_core_profiler_protobuf_tfstreamz_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_core_profiler_protobuf_tfstreamz_proto_goTypes,
		DependencyIndexes: file_tensorflow_core_profiler_protobuf_tfstreamz_proto_depIdxs,
		EnumInfos:         file_tensorflow_core_profiler_protobuf_tfstreamz_proto_enumTypes,
		MessageInfos:      file_tensorflow_core_profiler_protobuf_tfstreamz_proto_msgTypes,
	}.Build()
	File_tensorflow_core_profiler_protobuf_tfstreamz_proto = out.File
	file_tensorflow_core_profiler_protobuf_tfstreamz_proto_rawDesc = nil
	file_tensorflow_core_profiler_protobuf_tfstreamz_proto_goTypes = nil
	file_tensorflow_core_profiler_protobuf_tfstreamz_proto_depIdxs = nil
}
