// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tensorflow/core/profiler/protobuf/kernel_stats.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Next ID: 15
type KernelReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the kernel.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Registers per thread.
	RegistersPerThread uint32 `protobuf:"varint,2,opt,name=registers_per_thread,json=registersPerThread,proto3" json:"registers_per_thread,omitempty"`
	// Static shared memory in bytes.
	StaticShmemBytes uint32 `protobuf:"varint,3,opt,name=static_shmem_bytes,json=staticShmemBytes,proto3" json:"static_shmem_bytes,omitempty"`
	// Dynamic shared memory in bytes.
	DynamicShmemBytes uint32 `protobuf:"varint,4,opt,name=dynamic_shmem_bytes,json=dynamicShmemBytes,proto3" json:"dynamic_shmem_bytes,omitempty"`
	// Block dimensions.
	BlockDim []uint32 `protobuf:"varint,5,rep,packed,name=block_dim,json=blockDim,proto3" json:"block_dim,omitempty"`
	// Grid dimensions.
	GridDim []uint32 `protobuf:"varint,6,rep,packed,name=grid_dim,json=gridDim,proto3" json:"grid_dim,omitempty"`
	// Total duration of this kernel.
	TotalDurationNs uint64 `protobuf:"varint,7,opt,name=total_duration_ns,json=totalDurationNs,proto3" json:"total_duration_ns,omitempty"`
	// Min duration of kernel in nanoseconds.
	MinDurationNs uint64 `protobuf:"varint,8,opt,name=min_duration_ns,json=minDurationNs,proto3" json:"min_duration_ns,omitempty"`
	// Max duration of kernel in nanoseconds.
	MaxDurationNs uint64 `protobuf:"varint,9,opt,name=max_duration_ns,json=maxDurationNs,proto3" json:"max_duration_ns,omitempty"`
	// Kernel utilizes TensorCore instructions.
	IsKernelUsingTensorCore bool `protobuf:"varint,10,opt,name=is_kernel_using_tensor_core,json=isKernelUsingTensorCore,proto3" json:"is_kernel_using_tensor_core,omitempty"`
	// Operation is eligible to use TensorCores.
	IsOpTensorCoreEligible bool `protobuf:"varint,11,opt,name=is_op_tensor_core_eligible,json=isOpTensorCoreEligible,proto3" json:"is_op_tensor_core_eligible,omitempty"`
	// TF operation name.
	OpName string `protobuf:"bytes,12,opt,name=op_name,json=opName,proto3" json:"op_name,omitempty"`
	// Number of occurrences.
	Occurrences uint32 `protobuf:"varint,13,opt,name=occurrences,proto3" json:"occurrences,omitempty"`
	// Occupancy percentage.
	OccupancyPct float32 `protobuf:"fixed32,14,opt,name=occupancy_pct,json=occupancyPct,proto3" json:"occupancy_pct,omitempty"`
}

func (x *KernelReport) Reset() {
	*x = KernelReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_profiler_protobuf_kernel_stats_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelReport) ProtoMessage() {}

func (x *KernelReport) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_profiler_protobuf_kernel_stats_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelReport.ProtoReflect.Descriptor instead.
func (*KernelReport) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_profiler_protobuf_kernel_stats_proto_rawDescGZIP(), []int{0}
}

func (x *KernelReport) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KernelReport) GetRegistersPerThread() uint32 {
	if x != nil {
		return x.RegistersPerThread
	}
	return 0
}

func (x *KernelReport) GetStaticShmemBytes() uint32 {
	if x != nil {
		return x.StaticShmemBytes
	}
	return 0
}

func (x *KernelReport) GetDynamicShmemBytes() uint32 {
	if x != nil {
		return x.DynamicShmemBytes
	}
	return 0
}

func (x *KernelReport) GetBlockDim() []uint32 {
	if x != nil {
		return x.BlockDim
	}
	return nil
}

func (x *KernelReport) GetGridDim() []uint32 {
	if x != nil {
		return x.GridDim
	}
	return nil
}

func (x *KernelReport) GetTotalDurationNs() uint64 {
	if x != nil {
		return x.TotalDurationNs
	}
	return 0
}

func (x *KernelReport) GetMinDurationNs() uint64 {
	if x != nil {
		return x.MinDurationNs
	}
	return 0
}

func (x *KernelReport) GetMaxDurationNs() uint64 {
	if x != nil {
		return x.MaxDurationNs
	}
	return 0
}

func (x *KernelReport) GetIsKernelUsingTensorCore() bool {
	if x != nil {
		return x.IsKernelUsingTensorCore
	}
	return false
}

func (x *KernelReport) GetIsOpTensorCoreEligible() bool {
	if x != nil {
		return x.IsOpTensorCoreEligible
	}
	return false
}

func (x *KernelReport) GetOpName() string {
	if x != nil {
		return x.OpName
	}
	return ""
}

func (x *KernelReport) GetOccurrences() uint32 {
	if x != nil {
		return x.Occurrences
	}
	return 0
}

func (x *KernelReport) GetOccupancyPct() float32 {
	if x != nil {
		return x.OccupancyPct
	}
	return 0
}

type KernelStatsDb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of kernels aggregated by name.
	Reports []*KernelReport `protobuf:"bytes,1,rep,name=reports,proto3" json:"reports,omitempty"`
}

func (x *KernelStatsDb) Reset() {
	*x = KernelStatsDb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_profiler_protobuf_kernel_stats_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelStatsDb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelStatsDb) ProtoMessage() {}

func (x *KernelStatsDb) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_profiler_protobuf_kernel_stats_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelStatsDb.ProtoReflect.Descriptor instead.
func (*KernelStatsDb) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_profiler_protobuf_kernel_stats_proto_rawDescGZIP(), []int{1}
}

func (x *KernelStatsDb) GetReports() []*KernelReport {
	if x != nil {
		return x.Reports
	}
	return nil
}

var File_tensorflow_core_profiler_protobuf_kernel_stats_proto protoreflect.FileDescriptor

var file_tensorflow_core_profiler_protobuf_kernel_stats_proto_rawDesc = []byte{
	0x0a, 0x34, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x22, 0xc0, 0x04, 0x0a, 0x0c,
	0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x50, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x73, 0x68, 0x6d,
	0x65, 0x6d, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x53, 0x68, 0x6d, 0x65, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x68, 0x6d, 0x65,
	0x6d, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x68, 0x6d, 0x65, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x69, 0x6d, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x69, 0x6d, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x64, 0x69, 0x6d, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x07, 0x67, 0x72, 0x69, 0x64, 0x44, 0x69, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d,
	0x69, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x6d, 0x61, 0x78, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x73, 0x12, 0x3c, 0x0a, 0x1b, 0x69, 0x73, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x5f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x69, 0x73, 0x4b, 0x65, 0x72,
	0x6e, 0x65, 0x6c, 0x55, 0x73, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x43, 0x6f,
	0x72, 0x65, 0x12, 0x3a, 0x0a, 0x1a, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x5f, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x73, 0x4f, 0x70, 0x54, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x43, 0x6f, 0x72, 0x65, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x63, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x63,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x63, 0x63,
	0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x63, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0c, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x50, 0x63, 0x74, 0x22, 0x4c,
	0x0a, 0x0d, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x44, 0x62, 0x12,
	0x3b, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x42, 0xdc, 0x01, 0x0a,
	0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x42, 0x10, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a, 0x40,
	0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x63, 0x69, 0x69, 0x70, 0x2d,
	0x69, 0x63, 0x70, 0x2f, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2f, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0xa2, 0x02, 0x03, 0x54, 0x50, 0x58, 0xaa, 0x02, 0x13, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0xca, 0x02, 0x13, 0x54,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x72, 0xe2, 0x02, 0x1f, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_core_profiler_protobuf_kernel_stats_proto_rawDescOnce sync.Once
	file_tensorflow_core_profiler_protobuf_kernel_stats_proto_rawDescData = file_tensorflow_core_profiler_protobuf_kernel_stats_proto_rawDesc
)

func file_tensorflow_core_profiler_protobuf_kernel_stats_proto_rawDescGZIP() []byte {
	file_tensorflow_core_profiler_protobuf_kernel_stats_proto_rawDescOnce.Do(func() {
		file_tensorflow_core_profiler_protobuf_kernel_stats_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_core_profiler_protobuf_kernel_stats_proto_rawDescData)
	})
	return file_tensorflow_core_profiler_protobuf_kernel_stats_proto_rawDescData
}

var file_tensorflow_core_profiler_protobuf_kernel_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tensorflow_core_profiler_protobuf_kernel_stats_proto_goTypes = []interface{}{
	(*KernelReport)(nil),  // 0: tensorflow.profiler.KernelReport
	(*KernelStatsDb)(nil), // 1: tensorflow.profiler.KernelStatsDb
}
var file_tensorflow_core_profiler_protobuf_kernel_stats_proto_depIdxs = []int32{
	0, // 0: tensorflow.profiler.KernelStatsDb.reports:type_name -> tensorflow.profiler.KernelReport
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_tensorflow_core_profiler_protobuf_kernel_stats_proto_init() }
func file_tensorflow_core_profiler_protobuf_kernel_stats_proto_init() {
	if File_tensorflow_core_profiler_protobuf_kernel_stats_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_core_profiler_protobuf_kernel_stats_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_profiler_protobuf_kernel_stats_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelStatsDb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_core_profiler_protobuf_kernel_stats_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_core_profiler_protobuf_kernel_stats_proto_goTypes,
		DependencyIndexes: file_tensorflow_core_profiler_protobuf_kernel_stats_proto_depIdxs,
		MessageInfos:      file_tensorflow_core_profiler_protobuf_kernel_stats_proto_msgTypes,
	}.Build()
	File_tensorflow_core_profiler_protobuf_kernel_stats_proto = out.File
	file_tensorflow_core_profiler_protobuf_kernel_stats_proto_rawDesc = nil
	file_tensorflow_core_profiler_protobuf_kernel_stats_proto_goTypes = nil
	file_tensorflow_core_profiler_protobuf_kernel_stats_proto_depIdxs = nil
}
