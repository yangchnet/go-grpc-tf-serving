// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tensorflow/core/profiler/protobuf/tf_function.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// All possible execution modes of a tf-function.
type TfFunctionExecutionMode int32

const (
	// Yet to be set.
	TfFunctionExecutionMode_INVALID_MODE TfFunctionExecutionMode = 0
	// Eager execution.
	TfFunctionExecutionMode_EAGER_MODE TfFunctionExecutionMode = 1
	// Graph execution with tracing.
	TfFunctionExecutionMode_TRACED_MODE TfFunctionExecutionMode = 2
	// Graph execution without tracing.
	TfFunctionExecutionMode_NOT_TRACED_MODE TfFunctionExecutionMode = 3
	// Concrete function.
	TfFunctionExecutionMode_CONCRETE_MODE TfFunctionExecutionMode = 4
)

// Enum value maps for TfFunctionExecutionMode.
var (
	TfFunctionExecutionMode_name = map[int32]string{
		0: "INVALID_MODE",
		1: "EAGER_MODE",
		2: "TRACED_MODE",
		3: "NOT_TRACED_MODE",
		4: "CONCRETE_MODE",
	}
	TfFunctionExecutionMode_value = map[string]int32{
		"INVALID_MODE":    0,
		"EAGER_MODE":      1,
		"TRACED_MODE":     2,
		"NOT_TRACED_MODE": 3,
		"CONCRETE_MODE":   4,
	}
)

func (x TfFunctionExecutionMode) Enum() *TfFunctionExecutionMode {
	p := new(TfFunctionExecutionMode)
	*p = x
	return p
}

func (x TfFunctionExecutionMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TfFunctionExecutionMode) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_core_profiler_protobuf_tf_function_proto_enumTypes[0].Descriptor()
}

func (TfFunctionExecutionMode) Type() protoreflect.EnumType {
	return &file_tensorflow_core_profiler_protobuf_tf_function_proto_enumTypes[0]
}

func (x TfFunctionExecutionMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TfFunctionExecutionMode.Descriptor instead.
func (TfFunctionExecutionMode) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDescGZIP(), []int{0}
}

// All possible compilers that can be used to compile a tf-function in the graph
// mode.
type TfFunctionCompiler int32

const (
	// Yet to be set.
	TfFunctionCompiler_INVALID_COMPILER TfFunctionCompiler = 0
	// Any other compiler.
	TfFunctionCompiler_OTHER_COMPILER TfFunctionCompiler = 1
	// If some instance of the function is compiled with XLA and some is compiled
	// with Non-XLA, use "MIXED_COMPILER".
	TfFunctionCompiler_MIXED_COMPILER TfFunctionCompiler = 2
	// XLA compiler.
	TfFunctionCompiler_XLA_COMPILER TfFunctionCompiler = 3
	// MLIR compiler.
	TfFunctionCompiler_MLIR_COMPILER TfFunctionCompiler = 4
)

// Enum value maps for TfFunctionCompiler.
var (
	TfFunctionCompiler_name = map[int32]string{
		0: "INVALID_COMPILER",
		1: "OTHER_COMPILER",
		2: "MIXED_COMPILER",
		3: "XLA_COMPILER",
		4: "MLIR_COMPILER",
	}
	TfFunctionCompiler_value = map[string]int32{
		"INVALID_COMPILER": 0,
		"OTHER_COMPILER":   1,
		"MIXED_COMPILER":   2,
		"XLA_COMPILER":     3,
		"MLIR_COMPILER":    4,
	}
)

func (x TfFunctionCompiler) Enum() *TfFunctionCompiler {
	p := new(TfFunctionCompiler)
	*p = x
	return p
}

func (x TfFunctionCompiler) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TfFunctionCompiler) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_core_profiler_protobuf_tf_function_proto_enumTypes[1].Descriptor()
}

func (TfFunctionCompiler) Type() protoreflect.EnumType {
	return &file_tensorflow_core_profiler_protobuf_tf_function_proto_enumTypes[1]
}

func (x TfFunctionCompiler) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TfFunctionCompiler.Descriptor instead.
func (TfFunctionCompiler) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDescGZIP(), []int{1}
}

// Metrics associated with a particular execution mode of a tf-function.
type TfFunctionMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of invocations to the function in that execution mode.
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The sum of "self-execution" time of this function over those invocations.
	SelfTimePs uint64 `protobuf:"varint,2,opt,name=self_time_ps,json=selfTimePs,proto3" json:"self_time_ps,omitempty"`
}

func (x *TfFunctionMetrics) Reset() {
	*x = TfFunctionMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_profiler_protobuf_tf_function_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TfFunctionMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TfFunctionMetrics) ProtoMessage() {}

func (x *TfFunctionMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_profiler_protobuf_tf_function_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TfFunctionMetrics.ProtoReflect.Descriptor instead.
func (*TfFunctionMetrics) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDescGZIP(), []int{0}
}

func (x *TfFunctionMetrics) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TfFunctionMetrics) GetSelfTimePs() uint64 {
	if x != nil {
		return x.SelfTimePs
	}
	return 0
}

// Statistics for a tf-function.
type TfFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A map from each execution mode to its corresponding metrics.
	Metrics map[int32]*TfFunctionMetrics `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Total tracing count from the program's beginning (i.e. beyond the profiling
	// period) of this tf-function.
	TotalTracingCount int64 `protobuf:"varint,2,opt,name=total_tracing_count,json=totalTracingCount,proto3" json:"total_tracing_count,omitempty"`
	// Compiler used to compile this function.
	Compiler TfFunctionCompiler `protobuf:"varint,3,opt,name=compiler,proto3,enum=tensorflow.profiler.TfFunctionCompiler" json:"compiler,omitempty"`
	// Percentage of time spent in the expensive calls to this function in the
	// profiled period.
	ExpensiveCallPercent float64 `protobuf:"fixed64,4,opt,name=expensive_call_percent,json=expensiveCallPercent,proto3" json:"expensive_call_percent,omitempty"`
}

func (x *TfFunction) Reset() {
	*x = TfFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_profiler_protobuf_tf_function_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TfFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TfFunction) ProtoMessage() {}

func (x *TfFunction) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_profiler_protobuf_tf_function_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TfFunction.ProtoReflect.Descriptor instead.
func (*TfFunction) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDescGZIP(), []int{1}
}

func (x *TfFunction) GetMetrics() map[int32]*TfFunctionMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *TfFunction) GetTotalTracingCount() int64 {
	if x != nil {
		return x.TotalTracingCount
	}
	return 0
}

func (x *TfFunction) GetCompiler() TfFunctionCompiler {
	if x != nil {
		return x.Compiler
	}
	return TfFunctionCompiler_INVALID_COMPILER
}

func (x *TfFunction) GetExpensiveCallPercent() float64 {
	if x != nil {
		return x.ExpensiveCallPercent
	}
	return 0
}

// Statistics for all tf-functions.
type TfFunctionDb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A map from function name to the statistics of that function.
	TfFunctions map[string]*TfFunction `protobuf:"bytes,1,rep,name=tf_functions,json=tfFunctions,proto3" json:"tf_functions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TfFunctionDb) Reset() {
	*x = TfFunctionDb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_profiler_protobuf_tf_function_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TfFunctionDb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TfFunctionDb) ProtoMessage() {}

func (x *TfFunctionDb) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_profiler_protobuf_tf_function_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TfFunctionDb.ProtoReflect.Descriptor instead.
func (*TfFunctionDb) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDescGZIP(), []int{2}
}

func (x *TfFunctionDb) GetTfFunctions() map[string]*TfFunction {
	if x != nil {
		return x.TfFunctions
	}
	return nil
}

var File_tensorflow_core_profiler_protobuf_tf_function_proto protoreflect.FileDescriptor

var file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDesc = []byte{
	0x0a, 0x33, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x66, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x22, 0x4b, 0x0a, 0x11, 0x54, 0x66,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x65, 0x6c,
	0x66, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x73, 0x22, 0xe3, 0x02, 0x0a, 0x0a, 0x54, 0x66, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2e, 0x54, 0x66,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x2e,
	0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x43,
	0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x27, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2e, 0x54, 0x66, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x69,
	0x6c, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x76, 0x65,
	0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x14, 0x65, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x76, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x1a, 0x62, 0x0a, 0x0c, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72,
	0x2e, 0x54, 0x66, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc6, 0x01,
	0x0a, 0x0c, 0x54, 0x66, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x62, 0x12, 0x55,
	0x0a, 0x0c, 0x74, 0x66, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2e, 0x54, 0x66, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x62, 0x2e, 0x54, 0x66, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x74, 0x66, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x5f, 0x0a, 0x10, 0x54, 0x66, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72,
	0x2e, 0x54, 0x66, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x74, 0x0a, 0x17, 0x54, 0x66, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x52, 0x41, 0x43, 0x45, 0x44, 0x5f, 0x4d, 0x4f,
	0x44, 0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x43,
	0x45, 0x44, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4e,
	0x43, 0x52, 0x45, 0x54, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x04, 0x2a, 0x77, 0x0a, 0x12,
	0x54, 0x66, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x49, 0x4c, 0x45, 0x52, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x54, 0x48, 0x45,
	0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x49, 0x4c, 0x45, 0x52, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x4d, 0x49, 0x58, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x49, 0x4c, 0x45, 0x52, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x58, 0x4c, 0x41, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x49, 0x4c, 0x45, 0x52,
	0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x4c, 0x49, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x49,
	0x4c, 0x45, 0x52, 0x10, 0x04, 0x42, 0xdb, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x72, 0x42, 0x0f, 0x54, 0x66, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x71, 0x63, 0x69, 0x69, 0x70, 0x2d, 0x69, 0x63, 0x70, 0x2f, 0x74, 0x66, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0xa2, 0x02, 0x03, 0x54, 0x50, 0x58, 0xaa, 0x02,
	0x13, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x72, 0xca, 0x02, 0x13, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x5c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0xe2, 0x02, 0x1f, 0x54, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x54,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDescOnce sync.Once
	file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDescData = file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDesc
)

func file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDescGZIP() []byte {
	file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDescOnce.Do(func() {
		file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDescData)
	})
	return file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDescData
}

var file_tensorflow_core_profiler_protobuf_tf_function_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tensorflow_core_profiler_protobuf_tf_function_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_tensorflow_core_profiler_protobuf_tf_function_proto_goTypes = []interface{}{
	(TfFunctionExecutionMode)(0), // 0: tensorflow.profiler.TfFunctionExecutionMode
	(TfFunctionCompiler)(0),      // 1: tensorflow.profiler.TfFunctionCompiler
	(*TfFunctionMetrics)(nil),    // 2: tensorflow.profiler.TfFunctionMetrics
	(*TfFunction)(nil),           // 3: tensorflow.profiler.TfFunction
	(*TfFunctionDb)(nil),         // 4: tensorflow.profiler.TfFunctionDb
	nil,                          // 5: tensorflow.profiler.TfFunction.MetricsEntry
	nil,                          // 6: tensorflow.profiler.TfFunctionDb.TfFunctionsEntry
}
var file_tensorflow_core_profiler_protobuf_tf_function_proto_depIdxs = []int32{
	5, // 0: tensorflow.profiler.TfFunction.metrics:type_name -> tensorflow.profiler.TfFunction.MetricsEntry
	1, // 1: tensorflow.profiler.TfFunction.compiler:type_name -> tensorflow.profiler.TfFunctionCompiler
	6, // 2: tensorflow.profiler.TfFunctionDb.tf_functions:type_name -> tensorflow.profiler.TfFunctionDb.TfFunctionsEntry
	2, // 3: tensorflow.profiler.TfFunction.MetricsEntry.value:type_name -> tensorflow.profiler.TfFunctionMetrics
	3, // 4: tensorflow.profiler.TfFunctionDb.TfFunctionsEntry.value:type_name -> tensorflow.profiler.TfFunction
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_tensorflow_core_profiler_protobuf_tf_function_proto_init() }
func file_tensorflow_core_profiler_protobuf_tf_function_proto_init() {
	if File_tensorflow_core_profiler_protobuf_tf_function_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_core_profiler_protobuf_tf_function_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TfFunctionMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_profiler_protobuf_tf_function_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TfFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_profiler_protobuf_tf_function_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TfFunctionDb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_core_profiler_protobuf_tf_function_proto_goTypes,
		DependencyIndexes: file_tensorflow_core_profiler_protobuf_tf_function_proto_depIdxs,
		EnumInfos:         file_tensorflow_core_profiler_protobuf_tf_function_proto_enumTypes,
		MessageInfos:      file_tensorflow_core_profiler_protobuf_tf_function_proto_msgTypes,
	}.Build()
	File_tensorflow_core_profiler_protobuf_tf_function_proto = out.File
	file_tensorflow_core_profiler_protobuf_tf_function_proto_rawDesc = nil
	file_tensorflow_core_profiler_protobuf_tf_function_proto_goTypes = nil
	file_tensorflow_core_profiler_protobuf_tf_function_proto_depIdxs = nil
}
